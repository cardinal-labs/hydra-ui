{"version":3,"file":"constants.js","sourceRoot":"","sources":["../../sdk/constants.ts"],"names":[],"mappings":";;;;AACA,6CAA+C;AAC/C,kDAAgE;AAGhE,6CAA4C;AAE5C,8FAAwE;AAE3D,QAAA,oBAAoB,GAAG,KAAK,CAAC;AAC7B,QAAA,0BAA0B,GAAG,EAAE,CAAC;AAEhC,QAAA,uBAAuB,GAAG,IAAI,mBAAS,CAClD,6CAA6C,CAC9C,CAAC;AAEW,QAAA,SAAS,GAAG,IAAI,mBAAS,CACpC,6CAA6C,CAC9C,CAAC;AAEW,QAAA,oBAAoB,GAAG,iBAAiB,CAAC;AACzC,QAAA,4BAA4B,GAAG,UAAU,CAAC;AAE1C,QAAA,mBAAmB,GAAG,qBAAqB,CAAC,GAAG,CAAC;AAUtD,MAAM,qBAAqB,GAAG,CACnC,UAAsB,EACtB,MAAe,EACf,cAA+B,EAC/B,EAAE;IACF,OAAO,IAAI,gBAAO,CAChB,2BAAmB,EACnB,+BAAuB,EACvB,IAAI,uBAAc,CAChB,UAAU,EACV,MAAM,aAAN,MAAM,cAAN,MAAM,GAAI,IAAA,oBAAW,EAAC,mBAAS,CAAC,OAAO,CAAC,EACxC,cAAc,aAAd,cAAc,cAAd,cAAc,GAAI,EAAE,CACrB,CACF,CAAC;AACJ,CAAC,CAAC;AAdW,QAAA,qBAAqB,yBAchC","sourcesContent":["import type { ParsedIdlAccountData } from \"@cardinal/common\";\nimport { emptyWallet } from \"@cardinal/common\";\nimport { AnchorProvider, Program } from \"@project-serum/anchor\";\nimport type { Wallet } from \"@project-serum/anchor/dist/cjs/provider\";\nimport type { ConfirmOptions, Connection } from \"@solana/web3.js\";\nimport { PublicKey } from \"@solana/web3.js\";\n\nimport * as PAYMENT_MANAGER_TYPES from \"./idl/cardinal_payment_manager\";\n\nexport const BASIS_POINTS_DIVISOR = 10000;\nexport const DEFAULT_BUY_SIDE_FEE_SHARE = 50;\n\nexport const PAYMENT_MANAGER_ADDRESS = new PublicKey(\n  \"pmvYY6Wgvpe3DEj3UX1FcRpMx43sMLYLJrFTVGcqpdn\"\n);\n\nexport const CRANK_KEY = new PublicKey(\n  \"crkdpVWjHWdggGgBuSyAqSmZUmAjYLzD435tcLDRLXr\"\n);\n\nexport const PAYMENT_MANAGER_SEED = \"payment-manager\";\nexport const DEFAULT_PAYMENT_MANAGER_NAME = \"cardinal\";\n\nexport const PAYMENT_MANAGER_IDL = PAYMENT_MANAGER_TYPES.IDL;\n\nexport type PAYMENT_MANAGER_PROGRAM =\n  PAYMENT_MANAGER_TYPES.CardinalPaymentManager;\n\nexport type PaymentManagerData = ParsedIdlAccountData<\n  \"paymentManager\",\n  PAYMENT_MANAGER_PROGRAM\n>;\n\nexport const paymentManagerProgram = (\n  connection: Connection,\n  wallet?: Wallet,\n  confirmOptions?: ConfirmOptions\n) => {\n  return new Program<PAYMENT_MANAGER_PROGRAM>(\n    PAYMENT_MANAGER_IDL,\n    PAYMENT_MANAGER_ADDRESS,\n    new AnchorProvider(\n      connection,\n      wallet ?? emptyWallet(PublicKey.default),\n      confirmOptions ?? {}\n    )\n  );\n};\n"]}