{"version":3,"file":"pda.js","sourceRoot":"","sources":["../../../../src/programs/transferAuthority/pda.ts"],"names":[],"mappings":";;;AAAA,kDAA8C;AAC9C,6CAA4C;AAE5C,6CAA8D;AAC9D,2CAMqB;AAErB;;;GAGG;AACI,MAAM,4BAA4B,GAAG,CAAC,IAAY,EAAa,EAAE;IACtE,OAAO,mBAAS,CAAC,sBAAsB,CACrC;QACE,cAAK,CAAC,KAAK,CAAC,IAAI,CAAC,MAAM,CAAC,mCAAuB,CAAC;QAChD,cAAK,CAAC,KAAK,CAAC,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC;KAC9B,EACD,sCAA0B,CAC3B,CAAC,CAAC,CAAC,CAAC;AACP,CAAC,CAAC;AARW,QAAA,4BAA4B,gCAQvC;AAEF;;;GAGG;AACI,MAAM,sBAAsB,GAAG,CAAC,IAAY,EAAa,EAAE;IAChE,OAAO,mBAAS,CAAC,sBAAsB,CACrC,CAAC,cAAK,CAAC,KAAK,CAAC,IAAI,CAAC,MAAM,CAAC,4BAAgB,CAAC,EAAE,cAAK,CAAC,KAAK,CAAC,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC,CAAC,EAC1E,sCAA0B,CAC3B,CAAC,CAAC,CAAC,CAAC;AACP,CAAC,CAAC;AALW,QAAA,sBAAsB,0BAKjC;AAEF;;;GAGG;AACI,MAAM,kBAAkB,GAAG,CAAC,MAAiB,EAAa,EAAE;IACjE,MAAM,cAAc,GAAG,IAAA,6BAAuB,EAAC,MAAM,CAAC,CAAC;IACvD,OAAO,mBAAS,CAAC,sBAAsB,CACrC,CAAC,cAAK,CAAC,KAAK,CAAC,IAAI,CAAC,MAAM,CAAC,wBAAY,CAAC,EAAE,cAAc,CAAC,OAAO,EAAE,CAAC,EACjE,sCAA0B,CAC3B,CAAC,CAAC,CAAC,CAAC;AACP,CAAC,CAAC;AANW,QAAA,kBAAkB,sBAM7B;AAEF;;;GAGG;AACI,MAAM,mBAAmB,GAAG,CAAC,MAAiB,EAAa,EAAE;IAClE,MAAM,cAAc,GAAG,IAAA,6BAAuB,EAAC,MAAM,CAAC,CAAC;IACvD,OAAO,mBAAS,CAAC,sBAAsB,CACrC,CAAC,cAAK,CAAC,KAAK,CAAC,IAAI,CAAC,MAAM,CAAC,yBAAa,CAAC,EAAE,cAAc,CAAC,OAAO,EAAE,CAAC,EAClE,sCAA0B,CAC3B,CAAC,CAAC,CAAC,CAAC;AACP,CAAC,CAAC;AANW,QAAA,mBAAmB,uBAM9B","sourcesContent":["import { utils } from \"@project-serum/anchor\";\nimport { PublicKey } from \"@solana/web3.js\";\n\nimport { findTokenManagerAddress } from \"../tokenManager/pda\";\nimport {\n  LISTING_SEED,\n  MARKETPLACE_SEED,\n  TRANSFER_AUTHORITY_ADDRESS,\n  TRANSFER_AUTHORITY_SEED,\n  TRANSFER_SEED,\n} from \"./constants\";\n\n/**\n * Finds the address of the transfer authority.\n * @returns\n */\nexport const findTransferAuthorityAddress = (name: string): PublicKey => {\n  return PublicKey.findProgramAddressSync(\n    [\n      utils.bytes.utf8.encode(TRANSFER_AUTHORITY_SEED),\n      utils.bytes.utf8.encode(name),\n    ],\n    TRANSFER_AUTHORITY_ADDRESS\n  )[0];\n};\n\n/**\n * Finds the address of the marketplace.\n * @returns\n */\nexport const findMarketplaceAddress = (name: string): PublicKey => {\n  return PublicKey.findProgramAddressSync(\n    [utils.bytes.utf8.encode(MARKETPLACE_SEED), utils.bytes.utf8.encode(name)],\n    TRANSFER_AUTHORITY_ADDRESS\n  )[0];\n};\n\n/**\n * Finds the address of the listing.\n * @returns\n */\nexport const findListingAddress = (mintId: PublicKey): PublicKey => {\n  const tokenManagerId = findTokenManagerAddress(mintId);\n  return PublicKey.findProgramAddressSync(\n    [utils.bytes.utf8.encode(LISTING_SEED), tokenManagerId.toBytes()],\n    TRANSFER_AUTHORITY_ADDRESS\n  )[0];\n};\n\n/**\n * Finds the address of the transfer.\n * @returns\n */\nexport const findTransferAddress = (mintId: PublicKey): PublicKey => {\n  const tokenManagerId = findTokenManagerAddress(mintId);\n  return PublicKey.findProgramAddressSync(\n    [utils.bytes.utf8.encode(TRANSFER_SEED), tokenManagerId.toBytes()],\n    TRANSFER_AUTHORITY_ADDRESS\n  )[0];\n};\n"]}