{"version":3,"file":"cardinal_paid_claim_approver.js","sourceRoot":"","sources":["../../../src/idl/cardinal_paid_claim_approver.ts"],"names":[],"mappings":"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","sourcesContent":["export type CardinalPaidClaimApprover = {\n  version: \"4.4.0\";\n  name: \"cardinal_paid_claim_approver\";\n  instructions: [\n    {\n      name: \"init\";\n      accounts: [\n        {\n          name: \"tokenManager\";\n          isMut: false;\n          isSigner: false;\n        },\n        {\n          name: \"claimApprover\";\n          isMut: true;\n          isSigner: false;\n        },\n        {\n          name: \"issuer\";\n          isMut: true;\n          isSigner: true;\n        },\n        {\n          name: \"payer\";\n          isMut: true;\n          isSigner: true;\n        },\n        {\n          name: \"systemProgram\";\n          isMut: false;\n          isSigner: false;\n        }\n      ];\n      args: [\n        {\n          name: \"ix\";\n          type: {\n            defined: \"InitIx\";\n          };\n        }\n      ];\n    },\n    {\n      name: \"pay\";\n      accounts: [\n        {\n          name: \"tokenManager\";\n          isMut: false;\n          isSigner: false;\n        },\n        {\n          name: \"paymentTokenAccount\";\n          isMut: true;\n          isSigner: false;\n        },\n        {\n          name: \"feeCollectorTokenAccount\";\n          isMut: true;\n          isSigner: false;\n        },\n        {\n          name: \"paymentManager\";\n          isMut: true;\n          isSigner: false;\n        },\n        {\n          name: \"claimApprover\";\n          isMut: true;\n          isSigner: false;\n        },\n        {\n          name: \"payer\";\n          isMut: true;\n          isSigner: true;\n        },\n        {\n          name: \"payerTokenAccount\";\n          isMut: true;\n          isSigner: false;\n        },\n        {\n          name: \"claimReceipt\";\n          isMut: true;\n          isSigner: false;\n        },\n        {\n          name: \"cardinalTokenManager\";\n          isMut: false;\n          isSigner: false;\n        },\n        {\n          name: \"cardinalPaymentManager\";\n          isMut: false;\n          isSigner: false;\n        },\n        {\n          name: \"tokenProgram\";\n          isMut: false;\n          isSigner: false;\n        },\n        {\n          name: \"systemProgram\";\n          isMut: false;\n          isSigner: false;\n        }\n      ];\n      args: [];\n    },\n    {\n      name: \"close\";\n      accounts: [\n        {\n          name: \"tokenManager\";\n          isMut: false;\n          isSigner: false;\n        },\n        {\n          name: \"claimApprover\";\n          isMut: true;\n          isSigner: false;\n        },\n        {\n          name: \"collector\";\n          isMut: true;\n          isSigner: false;\n        },\n        {\n          name: \"closer\";\n          isMut: true;\n          isSigner: true;\n        }\n      ];\n      args: [];\n    }\n  ];\n  accounts: [\n    {\n      name: \"paidClaimApprover\";\n      type: {\n        kind: \"struct\";\n        fields: [\n          {\n            name: \"bump\";\n            type: \"u8\";\n          },\n          {\n            name: \"paymentAmount\";\n            type: \"u64\";\n          },\n          {\n            name: \"paymentMint\";\n            type: \"publicKey\";\n          },\n          {\n            name: \"paymentManager\";\n            type: \"publicKey\";\n          },\n          {\n            name: \"tokenManager\";\n            type: \"publicKey\";\n          },\n          {\n            name: \"collector\";\n            type: \"publicKey\";\n          }\n        ];\n      };\n    }\n  ];\n  types: [\n    {\n      name: \"InitIx\";\n      type: {\n        kind: \"struct\";\n        fields: [\n          {\n            name: \"paymentMint\";\n            type: \"publicKey\";\n          },\n          {\n            name: \"paymentAmount\";\n            type: \"u64\";\n          },\n          {\n            name: \"paymentManager\";\n            type: \"publicKey\";\n          },\n          {\n            name: \"collector\";\n            type: \"publicKey\";\n          }\n        ];\n      };\n    }\n  ];\n  errors: [\n    {\n      code: 6000;\n      name: \"InvalidPaymentTokenAccount\";\n      msg: \"Token account not owned by the claim approver\";\n    },\n    {\n      code: 6001;\n      name: \"InvalidPaymentManagerTokenAccount\";\n      msg: \"Token account incorrect mint\";\n    },\n    {\n      code: 6002;\n      name: \"InvalidPayerTokenAccount\";\n      msg: \"Token account not owned by the payer\";\n    },\n    {\n      code: 6003;\n      name: \"InvalidTokenManager\";\n      msg: \"Invalid token manager for this claim approver\";\n    },\n    {\n      code: 6004;\n      name: \"InvalidIssuer\";\n      msg: \"Invalid issuer\";\n    },\n    {\n      code: 6005;\n      name: \"InvalidCollector\";\n      msg: \"Invalid collector\";\n    },\n    {\n      code: 6006;\n      name: \"AccountDiscriminatorMismatch\";\n      msg: \"Invalid account discriminator\";\n    },\n    {\n      code: 6007;\n      name: \"InvalidPaymentManagerProgram\";\n      msg: \"Invalid payment manager program\";\n    },\n    {\n      code: 6008;\n      name: \"InvalidPaymentManager\";\n      msg: \"Invalid payment manager\";\n    },\n    {\n      code: 6009;\n      name: \"InvalidPaymentMint\";\n      msg: \"Invalid payment mint\";\n    },\n    {\n      code: 6010;\n      name: \"InvalidMint\";\n      msg: \"Invalid mint\";\n    }\n  ];\n};\n\nexport const IDL: CardinalPaidClaimApprover = {\n  version: \"4.4.0\",\n  name: \"cardinal_paid_claim_approver\",\n  instructions: [\n    {\n      name: \"init\",\n      accounts: [\n        {\n          name: \"tokenManager\",\n          isMut: false,\n          isSigner: false,\n        },\n        {\n          name: \"claimApprover\",\n          isMut: true,\n          isSigner: false,\n        },\n        {\n          name: \"issuer\",\n          isMut: true,\n          isSigner: true,\n        },\n        {\n          name: \"payer\",\n          isMut: true,\n          isSigner: true,\n        },\n        {\n          name: \"systemProgram\",\n          isMut: false,\n          isSigner: false,\n        },\n      ],\n      args: [\n        {\n          name: \"ix\",\n          type: {\n            defined: \"InitIx\",\n          },\n        },\n      ],\n    },\n    {\n      name: \"pay\",\n      accounts: [\n        {\n          name: \"tokenManager\",\n          isMut: false,\n          isSigner: false,\n        },\n        {\n          name: \"paymentTokenAccount\",\n          isMut: true,\n          isSigner: false,\n        },\n        {\n          name: \"feeCollectorTokenAccount\",\n          isMut: true,\n          isSigner: false,\n        },\n        {\n          name: \"paymentManager\",\n          isMut: true,\n          isSigner: false,\n        },\n        {\n          name: \"claimApprover\",\n          isMut: true,\n          isSigner: false,\n        },\n        {\n          name: \"payer\",\n          isMut: true,\n          isSigner: true,\n        },\n        {\n          name: \"payerTokenAccount\",\n          isMut: true,\n          isSigner: false,\n        },\n        {\n          name: \"claimReceipt\",\n          isMut: true,\n          isSigner: false,\n        },\n        {\n          name: \"cardinalTokenManager\",\n          isMut: false,\n          isSigner: false,\n        },\n        {\n          name: \"cardinalPaymentManager\",\n          isMut: false,\n          isSigner: false,\n        },\n        {\n          name: \"tokenProgram\",\n          isMut: false,\n          isSigner: false,\n        },\n        {\n          name: \"systemProgram\",\n          isMut: false,\n          isSigner: false,\n        },\n      ],\n      args: [],\n    },\n    {\n      name: \"close\",\n      accounts: [\n        {\n          name: \"tokenManager\",\n          isMut: false,\n          isSigner: false,\n        },\n        {\n          name: \"claimApprover\",\n          isMut: true,\n          isSigner: false,\n        },\n        {\n          name: \"collector\",\n          isMut: true,\n          isSigner: false,\n        },\n        {\n          name: \"closer\",\n          isMut: true,\n          isSigner: true,\n        },\n      ],\n      args: [],\n    },\n  ],\n  accounts: [\n    {\n      name: \"paidClaimApprover\",\n      type: {\n        kind: \"struct\",\n        fields: [\n          {\n            name: \"bump\",\n            type: \"u8\",\n          },\n          {\n            name: \"paymentAmount\",\n            type: \"u64\",\n          },\n          {\n            name: \"paymentMint\",\n            type: \"publicKey\",\n          },\n          {\n            name: \"paymentManager\",\n            type: \"publicKey\",\n          },\n          {\n            name: \"tokenManager\",\n            type: \"publicKey\",\n          },\n          {\n            name: \"collector\",\n            type: \"publicKey\",\n          },\n        ],\n      },\n    },\n  ],\n  types: [\n    {\n      name: \"InitIx\",\n      type: {\n        kind: \"struct\",\n        fields: [\n          {\n            name: \"paymentMint\",\n            type: \"publicKey\",\n          },\n          {\n            name: \"paymentAmount\",\n            type: \"u64\",\n          },\n          {\n            name: \"paymentManager\",\n            type: \"publicKey\",\n          },\n          {\n            name: \"collector\",\n            type: \"publicKey\",\n          },\n        ],\n      },\n    },\n  ],\n  errors: [\n    {\n      code: 6000,\n      name: \"InvalidPaymentTokenAccount\",\n      msg: \"Token account not owned by the claim approver\",\n    },\n    {\n      code: 6001,\n      name: \"InvalidPaymentManagerTokenAccount\",\n      msg: \"Token account incorrect mint\",\n    },\n    {\n      code: 6002,\n      name: \"InvalidPayerTokenAccount\",\n      msg: \"Token account not owned by the payer\",\n    },\n    {\n      code: 6003,\n      name: \"InvalidTokenManager\",\n      msg: \"Invalid token manager for this claim approver\",\n    },\n    {\n      code: 6004,\n      name: \"InvalidIssuer\",\n      msg: \"Invalid issuer\",\n    },\n    {\n      code: 6005,\n      name: \"InvalidCollector\",\n      msg: \"Invalid collector\",\n    },\n    {\n      code: 6006,\n      name: \"AccountDiscriminatorMismatch\",\n      msg: \"Invalid account discriminator\",\n    },\n    {\n      code: 6007,\n      name: \"InvalidPaymentManagerProgram\",\n      msg: \"Invalid payment manager program\",\n    },\n    {\n      code: 6008,\n      name: \"InvalidPaymentManager\",\n      msg: \"Invalid payment manager\",\n    },\n    {\n      code: 6009,\n      name: \"InvalidPaymentMint\",\n      msg: \"Invalid payment mint\",\n    },\n    {\n      code: 6010,\n      name: \"InvalidMint\",\n      msg: \"Invalid mint\",\n    },\n  ],\n};\n"]}