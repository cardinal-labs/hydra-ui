{"version":3,"file":"constants.js","sourceRoot":"","sources":["../../../../src/programs/timeInvalidator/constants.ts"],"names":[],"mappings":"AACA,OAAO,EAAE,WAAW,EAAE,MAAM,kBAAkB,CAAC;AAC/C,OAAO,EAAE,cAAc,EAAE,OAAO,EAAE,MAAM,uBAAuB,CAAC;AAGhE,OAAO,EAAE,OAAO,EAAE,SAAS,EAAE,MAAM,iBAAiB,CAAC;AAErD,OAAO,KAAK,sBAAsB,MAAM,qCAAqC,CAAC;AAE9E,MAAM,CAAC,MAAM,wBAAwB,GAAG,IAAI,SAAS,CACnD,6CAA6C,CAC9C,CAAC;AAEF,MAAM,CAAC,MAAM,qBAAqB,GAAG,kBAAkB,CAAC;AAExD,MAAM,CAAC,MAAM,oBAAoB,GAAG,sBAAsB,CAAC,GAAG,CAAC;AAuB/D,MAAM,CAAC,MAAM,sBAAsB,GAAG,CACpC,UAAsB,EACtB,MAAe,EACf,cAA+B,EAC/B,EAAE;IACF,OAAO,IAAI,OAAO,CAChB,oBAAoB,EACpB,wBAAwB,EACxB,IAAI,cAAc,CAChB,UAAU,EACV,MAAM,aAAN,MAAM,cAAN,MAAM,GAAI,WAAW,CAAC,OAAO,CAAC,QAAQ,EAAE,CAAC,SAAS,CAAC,EACnD,cAAc,aAAd,cAAc,cAAd,cAAc,GAAI,EAAE,CACrB,CACF,CAAC;AACJ,CAAC,CAAC","sourcesContent":["import type { ParsedIdlAccountData } from \"@cardinal/common\";\nimport { emptyWallet } from \"@cardinal/common\";\nimport { AnchorProvider, Program } from \"@project-serum/anchor\";\nimport type { Wallet } from \"@project-serum/anchor/dist/cjs/provider\";\nimport type { ConfirmOptions, Connection } from \"@solana/web3.js\";\nimport { Keypair, PublicKey } from \"@solana/web3.js\";\n\nimport * as TIME_INVALIDATOR_TYPES from \"../../idl/cardinal_time_invalidator\";\n\nexport const TIME_INVALIDATOR_ADDRESS = new PublicKey(\n  \"tmeEDp1RgoDtZFtx6qod3HkbQmv9LMe36uqKVvsLTDE\"\n);\n\nexport const TIME_INVALIDATOR_SEED = \"time-invalidator\";\n\nexport const TIME_INVALIDATOR_IDL = TIME_INVALIDATOR_TYPES.IDL;\n\nexport type TIME_INVALIDATOR_PROGRAM =\n  TIME_INVALIDATOR_TYPES.CardinalTimeInvalidator;\n\nexport type TimeInvalidatorData = ParsedIdlAccountData<\n  \"timeInvalidator\",\n  TIME_INVALIDATOR_PROGRAM\n>;\n\nexport type TimeInvalidationParams = {\n  collector?: PublicKey;\n  paymentManager?: PublicKey;\n  durationSeconds?: number;\n  maxExpiration?: number;\n  extension?: {\n    extensionPaymentAmount: number;\n    extensionDurationSeconds: number;\n    extensionPaymentMint: PublicKey;\n    disablePartialExtension?: boolean;\n  };\n};\n\nexport const timeInvalidatorProgram = (\n  connection: Connection,\n  wallet?: Wallet,\n  confirmOptions?: ConfirmOptions\n) => {\n  return new Program<TIME_INVALIDATOR_PROGRAM>(\n    TIME_INVALIDATOR_IDL,\n    TIME_INVALIDATOR_ADDRESS,\n    new AnchorProvider(\n      connection,\n      wallet ?? emptyWallet(Keypair.generate().publicKey),\n      confirmOptions ?? {}\n    )\n  );\n};\n"]}