/**
 * This code was GENERATED using the solita package.
 * Please DO NOT EDIT THIS FILE, instead rerun solita to update it or write a wrapper to add functionality.
 *
 * See: https://github.com/metaplex-foundation/solita
 */
import * as beet from '@metaplex-foundation/beet';
import * as web3 from '@solana/web3.js';
/**
 * @category Instructions
 * @category RemoveInUseBy
 * @category generated
 */
export declare const RemoveInUseByStruct: beet.BeetArgsStruct<{
    instructionDiscriminator: number;
}>;
/**
 * Accounts required by the _RemoveInUseBy_ instruction
 *
 * @property [_writable_] mintManager
 * @property [**signer**] user
 * @category Instructions
 * @category RemoveInUseBy
 * @category generated
 */
export declare type RemoveInUseByInstructionAccounts = {
    mintManager: web3.PublicKey;
    user: web3.PublicKey;
};
export declare const removeInUseByInstructionDiscriminator = 6;
/**
 * Creates a _RemoveInUseBy_ instruction.
 *
 * @param accounts that will be accessed while the instruction is processed
 * @category Instructions
 * @category RemoveInUseBy
 * @category generated
 */
export declare function createRemoveInUseByInstruction(accounts: RemoveInUseByInstructionAccounts, programId?: web3.PublicKey): web3.TransactionInstruction;
//# sourceMappingURL=RemoveInUseBy.d.ts.map