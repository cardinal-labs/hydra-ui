/**
 * This code was GENERATED using the solita package.
 * Please DO NOT EDIT THIS FILE, instead rerun solita to update it or write a wrapper to add functionality.
 *
 * See: https://github.com/metaplex-foundation/solita
 */
declare type ErrorWithCode = Error & {
    code: number;
};
declare type MaybeErrorWithCode = ErrorWithCode | null | undefined;
/**
 * InvalidAccountType: 'Invalid account type'
 *
 * @category Errors
 * @category generated
 */
export declare class InvalidAccountTypeError extends Error {
    readonly code: number;
    readonly name: string;
    constructor();
}
/**
 * DataTypeMismatch: 'Data type mismatch'
 *
 * @category Errors
 * @category generated
 */
export declare class DataTypeMismatchError extends Error {
    readonly code: number;
    readonly name: string;
    constructor();
}
/**
 * InvalidMint: 'Invalid mint'
 *
 * @category Errors
 * @category generated
 */
export declare class InvalidMintError extends Error {
    readonly code: number;
    readonly name: string;
    constructor();
}
/**
 * InvalidAmount: 'Invalid amount'
 *
 * @category Errors
 * @category generated
 */
export declare class InvalidAmountError extends Error {
    readonly code: number;
    readonly name: string;
    constructor();
}
/**
 * InvalidTokenAccount: 'Invalid token account'
 *
 * @category Errors
 * @category generated
 */
export declare class InvalidTokenAccountError extends Error {
    readonly code: number;
    readonly name: string;
    constructor();
}
/**
 * InvalidAuthority: 'Invalid authority address'
 *
 * @category Errors
 * @category generated
 */
export declare class InvalidAuthorityError extends Error {
    readonly code: number;
    readonly name: string;
    constructor();
}
/**
 * InvalidMintManager: 'Invalid mint manager'
 *
 * @category Errors
 * @category generated
 */
export declare class InvalidMintManagerError extends Error {
    readonly code: number;
    readonly name: string;
    constructor();
}
/**
 * InvalidMintMetadata: 'Invalid mint metadata'
 *
 * @category Errors
 * @category generated
 */
export declare class InvalidMintMetadataError extends Error {
    readonly code: number;
    readonly name: string;
    constructor();
}
/**
 * InusufficientMinimumCreatorShare: 'Insufficient minimum creator share'
 *
 * @category Errors
 * @category generated
 */
export declare class InusufficientMinimumCreatorShareError extends Error {
    readonly code: number;
    readonly name: string;
    constructor();
}
/**
 * InvlaidHolderTokenAccount: 'Invalid holder token account'
 *
 * @category Errors
 * @category generated
 */
export declare class InvlaidHolderTokenAccountError extends Error {
    readonly code: number;
    readonly name: string;
    constructor();
}
/**
 * InvalidTargetTokenAccount: 'Invalid target token account'
 *
 * @category Errors
 * @category generated
 */
export declare class InvalidTargetTokenAccountError extends Error {
    readonly code: number;
    readonly name: string;
    constructor();
}
/**
 * InvalidCloseTokenAccount: 'Invalid token account to close'
 *
 * @category Errors
 * @category generated
 */
export declare class InvalidCloseTokenAccountError extends Error {
    readonly code: number;
    readonly name: string;
    constructor();
}
/**
 * InvalidHolderTokenAccount: 'Invalid holder token account'
 *
 * @category Errors
 * @category generated
 */
export declare class InvalidHolderTokenAccountError extends Error {
    readonly code: number;
    readonly name: string;
    constructor();
}
/**
 * InvalidRuleset: 'Invalid ruleset'
 *
 * @category Errors
 * @category generated
 */
export declare class InvalidRulesetError extends Error {
    readonly code: number;
    readonly name: string;
    constructor();
}
/**
 * InvalidPreTransferInstruction: 'Invalid pre transfer instruction'
 *
 * @category Errors
 * @category generated
 */
export declare class InvalidPreTransferInstructionError extends Error {
    readonly code: number;
    readonly name: string;
    constructor();
}
/**
 * InvalidPostTransferInstruction: 'Invalid post transfer instruction'
 *
 * @category Errors
 * @category generated
 */
export declare class InvalidPostTransferInstructionError extends Error {
    readonly code: number;
    readonly name: string;
    constructor();
}
/**
 * AddressDisallowed: 'Disallowed address included'
 *
 * @category Errors
 * @category generated
 */
export declare class AddressDisallowedError extends Error {
    readonly code: number;
    readonly name: string;
    constructor();
}
/**
 * ProgramNotAllowed: 'Program not allowed in allowed programs to transfer'
 *
 * @category Errors
 * @category generated
 */
export declare class ProgramNotAllowedError extends Error {
    readonly code: number;
    readonly name: string;
    constructor();
}
/**
 * UnknownAccount: 'Unknown account found in instruction'
 *
 * @category Errors
 * @category generated
 */
export declare class UnknownAccountError extends Error {
    readonly code: number;
    readonly name: string;
    constructor();
}
/**
 * AccountNotFound: 'Account not found in instruction'
 *
 * @category Errors
 * @category generated
 */
export declare class AccountNotFoundError extends Error {
    readonly code: number;
    readonly name: string;
    constructor();
}
/**
 * TokenAlreadyInUse: 'Token already in use'
 *
 * @category Errors
 * @category generated
 */
export declare class TokenAlreadyInUseError extends Error {
    readonly code: number;
    readonly name: string;
    constructor();
}
/**
 * InvalidTokenUser: 'Invalid token user'
 *
 * @category Errors
 * @category generated
 */
export declare class InvalidTokenUserError extends Error {
    readonly code: number;
    readonly name: string;
    constructor();
}
/**
 * TokenCurentlyInUse: 'Token currently in use'
 *
 * @category Errors
 * @category generated
 */
export declare class TokenCurentlyInUseError extends Error {
    readonly code: number;
    readonly name: string;
    constructor();
}
/**
 * InvalidRulesetAuthority: 'Invalid ruleset authority'
 *
 * @category Errors
 * @category generated
 */
export declare class InvalidRulesetAuthorityError extends Error {
    readonly code: number;
    readonly name: string;
    constructor();
}
/**
 * InvalidFreezeAuthority: 'Invalid freeze authority'
 *
 * @category Errors
 * @category generated
 */
export declare class InvalidFreezeAuthorityError extends Error {
    readonly code: number;
    readonly name: string;
    constructor();
}
/**
 * InvalidMintAuthority: 'Invalid mint authority'
 *
 * @category Errors
 * @category generated
 */
export declare class InvalidMintAuthorityError extends Error {
    readonly code: number;
    readonly name: string;
    constructor();
}
/**
 * NotEnoughRemainingAccounts: 'Not enought remaining accounts'
 *
 * @category Errors
 * @category generated
 */
export declare class NotEnoughRemainingAccountsError extends Error {
    readonly code: number;
    readonly name: string;
    constructor();
}
/**
 * Attempts to resolve a custom program error from the provided error code.
 * @category Errors
 * @category generated
 */
export declare function errorFromCode(code: number): MaybeErrorWithCode;
/**
 * Attempts to resolve a custom program error from the provided error name, i.e. 'Unauthorized'.
 * @category Errors
 * @category generated
 */
export declare function errorFromName(name: string): MaybeErrorWithCode;
export {};
//# sourceMappingURL=index.d.ts.map