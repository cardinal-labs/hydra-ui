{"version":3,"file":"constants.js","sourceRoot":"","sources":["../../sdk/constants.ts"],"names":[],"mappings":";;;AAAA,iDAA4C;AAG5C,+BAA0C;AAEnC,MAAM,gBAAgB,GAAG,KAAK,EACnC,UAAsB,EACtB,MAAiB,EACC,EAAE;;IACpB,MAAM,aAAa,GAAG,IAAA,uBAAiB,EAAC,MAAM,CAAC,CAAC;IAChD,MAAM,QAAQ,GAAG,MAAM,IAAA,mBAAO,EAAC,UAAU,EAAE,MAAM,CAAC,CAAC;IACnD,OAAO,CACL,CAAA,MAAA,QAAQ,CAAC,eAAe,0CAAE,QAAQ,EAAE,MAAK,aAAa,CAAC,QAAQ,EAAE;QACjE,CAAA,MAAA,QAAQ,CAAC,aAAa,0CAAE,QAAQ,EAAE,MAAK,aAAa,CAAC,QAAQ,EAAE,CAChE,CAAC;AACJ,CAAC,CAAC;AAVW,QAAA,gBAAgB,oBAU3B","sourcesContent":["import { getMint } from \"@solana/spl-token\";\nimport type { Connection, PublicKey } from \"@solana/web3.js\";\n\nimport { findMintManagerId } from \"./pda\";\n\nexport const identifyCCSToken = async (\n  connection: Connection,\n  mintId: PublicKey\n): Promise<boolean> => {\n  const mintManagerId = findMintManagerId(mintId);\n  const mintData = await getMint(connection, mintId);\n  return (\n    mintData.freezeAuthority?.toString() === mintManagerId.toString() &&\n    mintData.mintAuthority?.toString() === mintManagerId.toString()\n  );\n};\n"]}