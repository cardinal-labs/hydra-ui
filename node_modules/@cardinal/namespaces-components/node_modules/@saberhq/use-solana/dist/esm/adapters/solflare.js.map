{"version":3,"file":"solflare.js","sourceRoot":"","sources":["../../../src/adapters/solflare.tsx"],"names":[],"mappings":"AAAA,OAAO,EAAE,mBAAmB,EAAE,MAAM,+BAA+B,CAAC;AAEpE,OAAO,SAAS,MAAM,gBAAgB,CAAC;AAEvC,MAAM,OAAO,eAAgB,SAAQ,mBAAmB;IAAxD;;QACW,wBAAmB,GAAG,KAAK,EAClC,GAAkB,EACM,EAAE;YAC1B,MAAM,GAAG,GAAG,EAAE,CAAC;YACf,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,GAAG,CAAC,MAAM,EAAE,CAAC,EAAE,EAAE;gBACnC,MAAM,EAAE,GAAG,GAAG,CAAC,CAAC,CAAC,CAAC;gBAClB,SAAS,CAAC,EAAE,EAAE,IAAI,CAAC,CAAC;gBACpB,MAAM,QAAQ,GAAG,MAAM,IAAI,CAAC,eAAe,CAAC,EAAE,CAAC,CAAC;gBAChD,GAAG,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC;aACpB;YACD,OAAO,GAAG,CAAC;QACb,CAAC,CAAC;IACJ,CAAC;CAAA","sourcesContent":["import { SolletWalletAdapter } from \"@solana/wallet-adapter-sollet\";\nimport type { Transaction } from \"@solana/web3.js\";\nimport invariant from \"tiny-invariant\";\n\nexport class SolflareAdapter extends SolletWalletAdapter {\n  override signAllTransactions = async (\n    txs: Transaction[]\n  ): Promise<Transaction[]> => {\n    const ret = [];\n    for (let i = 0; i < txs.length; i++) {\n      const tx = txs[i];\n      invariant(tx, \"tx\");\n      const signedTx = await this.signTransaction(tx);\n      ret.push(signedTx);\n    }\n    return ret;\n  };\n}\n"]}