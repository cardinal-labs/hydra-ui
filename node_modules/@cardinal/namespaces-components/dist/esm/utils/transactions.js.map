{"version":3,"file":"transactions.js","sourceRoot":"","sources":["../../../src/utils/transactions.ts"],"names":[],"mappings":";AAAA,OAAO,EAAE,IAAI,EAAE,MAAM,uBAAuB,CAAC;AAG7C,MAAM,CAAC,MAAM,sBAAsB,GAAG,CACpC,UAA2B,EAC3B,MAAqB,EACrB,WAA6B,EAC7B,EAAE;IACF,IAAI,CAAC,MAAM;QAAE,MAAM,IAAI,KAAK,CAAC,sBAAsB,CAAC,CAAC;IACrD,WAAW,CAAC,QAAQ,GAAG,MAAM,CAAC,SAAS,CAAC;IACxC,WAAW,CAAC,eAAe,GAAG,CAC5B,MAAM,UAAU,CAAC,kBAAkB,CAAC,KAAK,CAAC,CAC3C,CAAC,SAAS,CAAC;IACZ,MAAM,MAAM,CAAC,eAAe,CAAC,WAAW,CAAC,CAAC;IAC1C,IAAI,IAAI,GAAG,IAAI,CAAC;IAChB,IAAI,GAAG,MAAM,IAAI,CAAC,4BAA4B,CAC5C,UAAU,EACV,WAAW,CAAC,SAAS,EAAE,CACxB,CAAC;IACF,OAAO,IAAI,CAAC;AACd,CAAC,CAAA,CAAC;AAEF,MAAM,CAAC,MAAM,SAAS,GAAG,CAAO,EAAc,EAAE,KAAK,GAAG,IAAI,EAAE,EAAE;IAC9D,MAAM,IAAI,OAAO,CAAC,CAAC,CAAC,EAAE,EAAE,CAAC,UAAU,CAAC,CAAC,EAAE,KAAK,CAAC,CAAC,CAAC;IAC/C,MAAM,EAAE,EAAE,CAAC;AACb,CAAC,CAAA,CAAC","sourcesContent":["import { web3 } from \"@project-serum/anchor\";\nimport type { Wallet } from \"@saberhq/solana-contrib\";\n\nexport const signAndSendTransaction = async (\n  connection: web3.Connection,\n  wallet: Wallet | null,\n  transaction: web3.Transaction\n) => {\n  if (!wallet) throw new Error(\"Wallet not connected\");\n  transaction.feePayer = wallet.publicKey;\n  transaction.recentBlockhash = (\n    await connection.getRecentBlockhash(\"max\")\n  ).blockhash;\n  await wallet.signTransaction(transaction);\n  let txid = null;\n  txid = await web3.sendAndConfirmRawTransaction(\n    connection,\n    transaction.serialize()\n  );\n  return txid;\n};\n\nexport const withSleep = async (fn: () => void, sleep = 2000) => {\n  await new Promise((r) => setTimeout(r, sleep));\n  await fn();\n};\n"]}