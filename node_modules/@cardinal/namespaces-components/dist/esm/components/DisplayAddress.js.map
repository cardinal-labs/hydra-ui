{"version":3,"file":"DisplayAddress.js","sourceRoot":"","sources":["../../../src/components/DisplayAddress.tsx"],"names":[],"mappings":";AACA,OAAO,aAAa,MAAM,sBAAsB,CAAA;AAEhD,OAAO,EAAE,cAAc,EAAE,MAAM,yBAAyB,CAAA;AACxD,OAAO,EAAE,kBAAkB,EAAE,iBAAiB,EAAE,MAAM,iBAAiB,CAAA;AAEvE,MAAM,CAAC,MAAM,cAAc,GAAG,CAAC,EAC7B,UAAU,EACV,OAAO,EACP,MAAM,GAAG,MAAM,EACf,KAAK,GAAG,OAAO,EACf,IAAI,GAAG,KAAK,EACZ,KAAK,GAQN,EAAE,EAAE;IACH,MAAM,EAAE,WAAW,EAAE,WAAW,EAAE,GAAG,cAAc,CAAC,UAAU,EAAE,OAAO,CAAC,CAAA;IAExE,IAAI,CAAC,OAAO;QAAE,OAAO,mBAAK,CAAA;IAC1B,OAAO,WAAW,CAAC,CAAC,CAAC,CACnB,4BACE,KAAK,kCACA,KAAK,KACR,MAAM;YACN,KAAK,EACL,QAAQ,EAAE,QAAQ,mBAGpB,KAAC,aAAa,kBACZ,eAAe,EAAE,IAAI,CAAC,CAAC,CAAC,MAAM,CAAC,CAAC,CAAC,SAAS,EAC1C,eAAe,EAAE,IAAI,CAAC,CAAC,CAAC,MAAM,CAAC,CAAC,CAAC,SAAS,gBAE1C,eAAM,KAAK,oBAAO,KAAK,GAAI,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,KAAK,EAAE,KAAK,EAAE,MAAM,EAAE,MAAM,GAAI,IACzD,IACZ,CACP,CAAC,CAAC,CAAC,CACF,4BAAK,KAAK,kBAAI,OAAO,EAAE,MAAM,EAAE,GAAG,EAAE,KAAK,IAAK,KAAK,iBAChD,CAAA,WAAW,aAAX,WAAW,uBAAX,WAAW,CAAE,QAAQ,CAAC,GAAG,CAAC;YACzB,CAAC,CAAC,iBAAiB,CAAC,WAAW,CAAC;YAChC,CAAC,CAAC,WAAW,IAAI,kBAAkB,CAAC,OAAO,CAAC,IAC1C,CACP,CAAA;AACH,CAAC,CAAA","sourcesContent":["import type { Connection, PublicKey } from '@solana/web3.js'\nimport ContentLoader from 'react-content-loader'\n\nimport { useAddressName } from '../hooks/useAddressName'\nimport { formatShortAddress, formatTwitterLink } from '../utils/format'\n\nexport const DisplayAddress = ({\n  connection,\n  address,\n  height = '20px',\n  width = '100px',\n  dark = false,\n  style,\n}: {\n  connection: Connection\n  address: PublicKey | undefined\n  height?: string\n  width?: string\n  dark?: boolean\n  style?: React.CSSProperties\n}) => {\n  const { displayName, loadingName } = useAddressName(connection, address)\n\n  if (!address) return <></>\n  return loadingName ? (\n    <div\n      style={{\n        ...style,\n        height,\n        width,\n        overflow: 'hidden',\n      }}\n    >\n      <ContentLoader\n        backgroundColor={dark ? '#333' : undefined}\n        foregroundColor={dark ? '#555' : undefined}\n      >\n        <rect style={{ ...style }} x={0} y={0} width={width} height={height} />\n      </ContentLoader>\n    </div>\n  ) : (\n    <div style={{ display: 'flex', gap: '5px', ...style }}>\n      {displayName?.includes('@')\n        ? formatTwitterLink(displayName)\n        : displayName || formatShortAddress(address)}\n    </div>\n  )\n}\n"]}