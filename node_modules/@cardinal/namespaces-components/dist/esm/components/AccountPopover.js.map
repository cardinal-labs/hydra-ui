{"version":3,"file":"AccountPopover.js","sourceRoot":"","sources":["../../../src/components/AccountPopover.tsx"],"names":[],"mappings":";;AAEA,OAAO,EAAE,IAAI,EAAE,MAAM,UAAU,CAAA;AAE/B,OAAO,EAAE,UAAU,EAAE,SAAS,EAAE,MAAM,gBAAgB,CAAA;AAEtD,OAAO,EAAE,YAAY,EAAE,cAAc,EAAE,iBAAiB,EAAE,MAAM,KAAK,CAAA;AAErE,MAAM,CAAC,MAAM,cAAc,GAAG,CAAC,EAC7B,UAAU,EACV,WAAW,EACX,MAAM,EACN,KAAK,EACL,IAAI,EACJ,gBAAgB,GAQjB,EAAE,EAAE;;IACH,MAAM,EAAE,IAAI,EAAE,GAAG,iBAAiB,EAAE,CAAA;IAEpC,MAAM,EAAE,WAAW,EAAE,WAAW,EAAE,GAAG,cAAc,CACjD,UAAU,EACV,MAAA,MAAM,aAAN,MAAM,uBAAN,MAAM,CAAE,SAAS,mCAAI,SAAS,CAC/B,CAAA;IACD,IAAI,CAAC,MAAM,CAAC,SAAS;QAAE,OAAO,mBAAK,CAAA;IACnC,OAAO,CACL,4BAAK,SAAS,EAAC,yBAAyB,gBACtC,6BACE,SAAS,EAAC,8BAA8B,EACxC,KAAK,kCACA,KAAK,KACR,eAAe,EAAE,IAAI,CAAC,CAAC,CAAC,iBAAiB,CAAC,CAAC,CAAC,oBAAoB,EAChE,KAAK,EAAE,IAAI,CAAC,CAAC,CAAC,MAAM,CAAC,CAAC,CAAC,MAAM,oBAG/B,6BAAK,SAAS,EAAC,4CAA4C,iBACzD,4BAAK,SAAS,EAAC,sBAAsB,gBACnC,4BAAK,SAAS,EAAC,mBAAmB,gBAChC,KAAC,YAAY,IACX,IAAI,EAAE,IAAI,EACV,UAAU,EAAE,UAAU,EACtB,OAAO,EAAE,MAAM,CAAC,SAAS,GACzB,IACE,IACF,EACN,cAAK,SAAS,EAAC,YAAY,GAAO,KAC9B,EACN,6BAAK,SAAS,EAAC,yBAAyB,iBACrC,MAAM,IAAI,CACT,MAAC,QAAQ,kBACP,IAAI,EAAE,IAAI,EACV,OAAO,EAAE,GAAS,EAAE,kDAClB,OAAA,IAAI,CAAC,MAAgB,EAAE,UAAU,EAAE,WAAW,CAAC,CAAA,GAAA,iBAGjD,KAAC,SAAS,KAAG,EACb,yBACG,WAAW,CAAC,CAAC,CAAC,CACb,cACE,SAAS,EAAC,gCAAgC,EAC1C,KAAK,EAAE,EAAE,UAAU,EAAE,IAAI,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,GAAG,CAAC,EAAE,GACzC,CACH,CAAC,CAAC,CAAC,WAAW,CAAC,CAAC,CAAC,CAChB,cAAc,CACf,CAAC,CAAC,CAAC,CACF,cAAc,CACf,GACI,KACE,CACZ,EACD,MAAC,QAAQ,kBAAC,OAAO,EAAE,gBAAgB,EAAE,IAAI,EAAE,IAAI,iBAC7C,KAAC,UAAU,KAAG,EACd,wCAAuB,KACd,KACP,KACF,IACF,CACP,CAAA;AACH,CAAC,CAAA;AAED,MAAM,QAAQ,GAAG,CAAC,EAChB,QAAQ,EACR,OAAO,EACP,IAAI,GAKL,EAAE,EAAE,CAAC,CACJ,4BACE,OAAO,EAAE,OAAO,EAChB,SAAS,EAAE,uIACT,IAAI,CAAC,CAAC,CAAC,mBAAmB,CAAC,CAAC,CAAC,mBAC/B,EAAE,gBAED,QAAQ,IACL,CACP,CAAA","sourcesContent":["import type { Wallet } from '@saberhq/solana-contrib'\nimport type { Cluster, Connection } from '@solana/web3.js'\nimport { rgba } from 'polished'\nimport React from 'react'\nimport { FaPowerOff, FaTwitter } from 'react-icons/fa'\n\nimport { ProfileSmall, useAddressName, useWalletIdentity } from '../'\n\nexport const AccountPopover = ({\n  connection,\n  environment,\n  wallet,\n  style,\n  dark,\n  handleDisconnect,\n}: {\n  connection: Connection\n  wallet: Wallet\n  environment: Cluster\n  handleDisconnect: () => void\n  dark?: boolean\n  style?: React.CSSProperties\n}) => {\n  const { show } = useWalletIdentity()\n\n  const { displayName, loadingName } = useAddressName(\n    connection,\n    wallet?.publicKey ?? undefined\n  )\n  if (!wallet.publicKey) return <></>\n  return (\n    <div className=\"w-screen max-w-[300px] \">\n      <div\n        className=\"w-full rounded-lg shadow-2xl\"\n        style={{\n          ...style,\n          backgroundColor: dark ? 'rgb(42, 44, 52)' : 'rgb(255, 255, 255)',\n          color: dark ? '#fff' : '#333',\n        }}\n      >\n        <div className=\"flex items-center justify-between p-7 pb-0\">\n          <div className=\"grid gap-2 text-base\">\n            <div className=\"flex items-center\">\n              <ProfileSmall\n                dark={dark}\n                connection={connection}\n                address={wallet.publicKey}\n              />\n            </div>\n          </div>\n          <div className=\"flex gap-3\"></div>\n        </div>\n        <div className=\"flex flex-col gap-1 p-5\">\n          {wallet && (\n            <MenuItem\n              dark={dark}\n              onClick={async () =>\n                show(wallet as Wallet, connection, environment)\n              }\n            >\n              <FaTwitter />\n              <span>\n                {loadingName ? (\n                  <div\n                    className=\"animate h-4 w-24 animate-pulse\"\n                    style={{ background: rgba(0, 0, 0, 0.1) }}\n                  />\n                ) : displayName ? (\n                  'Edit Twitter'\n                ) : (\n                  'Link Twitter'\n                )}\n              </span>\n            </MenuItem>\n          )}\n          <MenuItem onClick={handleDisconnect} dark={dark}>\n            <FaPowerOff />\n            <span>Disconnect</span>\n          </MenuItem>\n        </div>\n      </div>\n    </div>\n  )\n}\n\nconst MenuItem = ({\n  children,\n  onClick,\n  dark,\n}: {\n  children: React.ReactNode\n  onClick: () => void\n  dark?: boolean\n}) => (\n  <div\n    onClick={onClick}\n    className={`flex h-10 w-full cursor-pointer appearance-none items-center gap-3 rounded border-none bg-none p-3 text-base leading-4 outline-none ${\n      dark ? 'hover:bg-gray-700' : 'hover:bg-gray-100'\n    }`}\n  >\n    {children}\n  </div>\n)\n"]}