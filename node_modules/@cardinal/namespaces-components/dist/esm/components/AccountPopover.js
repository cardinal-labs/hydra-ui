import { __awaiter } from "tslib";
import { Fragment as _Fragment, jsx as _jsx, jsxs as _jsxs } from "@emotion/react/jsx-runtime";
import { rgba } from 'polished';
import { FaPowerOff, FaTwitter } from 'react-icons/fa';
import { ProfileSmall, useAddressName, useWalletIdentity } from '../';
export const AccountPopover = ({ connection, environment, wallet, style, dark, handleDisconnect, }) => {
    var _a;
    const { show } = useWalletIdentity();
    const { displayName, loadingName } = useAddressName(connection, (_a = wallet === null || wallet === void 0 ? void 0 : wallet.publicKey) !== null && _a !== void 0 ? _a : undefined);
    if (!wallet.publicKey)
        return _jsx(_Fragment, {});
    return (_jsx("div", Object.assign({ className: "w-screen max-w-[300px] " }, { children: _jsxs("div", Object.assign({ className: "w-full rounded-lg shadow-2xl", style: Object.assign(Object.assign({}, style), { backgroundColor: dark ? 'rgb(42, 44, 52)' : 'rgb(255, 255, 255)', color: dark ? '#fff' : '#333' }) }, { children: [_jsxs("div", Object.assign({ className: "flex items-center justify-between p-7 pb-0" }, { children: [_jsx("div", Object.assign({ className: "grid gap-2 text-base" }, { children: _jsx("div", Object.assign({ className: "flex items-center" }, { children: _jsx(ProfileSmall, { dark: dark, connection: connection, address: wallet.publicKey }) })) })), _jsx("div", { className: "flex gap-3" })] })), _jsxs("div", Object.assign({ className: "flex flex-col gap-1 p-5" }, { children: [wallet && (_jsxs(MenuItem, Object.assign({ dark: dark, onClick: () => __awaiter(void 0, void 0, void 0, function* () { return show(wallet, connection, environment); }) }, { children: [_jsx(FaTwitter, {}), _jsx("span", { children: loadingName ? (_jsx("div", { className: "animate h-4 w-24 animate-pulse", style: { background: rgba(0, 0, 0, 0.1) } })) : displayName ? ('Edit Twitter') : ('Link Twitter') })] }))), _jsxs(MenuItem, Object.assign({ onClick: handleDisconnect, dark: dark }, { children: [_jsx(FaPowerOff, {}), _jsx("span", { children: "Disconnect" })] }))] }))] })) })));
};
const MenuItem = ({ children, onClick, dark, }) => (_jsx("div", Object.assign({ onClick: onClick, className: `flex h-10 w-full cursor-pointer appearance-none items-center gap-3 rounded border-none bg-none p-3 text-base leading-4 outline-none ${dark ? 'hover:bg-gray-700' : 'hover:bg-gray-100'}` }, { children: children })));
//# sourceMappingURL=AccountPopover.js.map