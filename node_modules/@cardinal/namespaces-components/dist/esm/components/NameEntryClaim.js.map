{"version":3,"file":"NameEntryClaim.js","sourceRoot":"","sources":["../../../src/components/NameEntryClaim.tsx"],"names":[],"mappings":"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","sourcesContent":["import styled from '@emotion/styled'\nimport type { Wallet } from '@saberhq/solana-contrib'\nimport type { Cluster, Connection } from '@solana/web3.js'\nimport { useEffect, useState } from 'react'\n\nimport { Alert } from '../common/Alert'\nimport { LoadingSpinner } from '../common/LoadingSpinner'\nimport { useClaimRequest } from '../hooks/useClaimRequest'\nimport { useNameEntryData } from '../hooks/useNameEntryData'\nimport { useReverseEntry } from '../hooks/useReverseEntry'\nimport {\n  apiBase,\n  claimEntry,\n  initAndClaimEntry,\n  revokeAndClaim,\n  setReverseEntry,\n  tryGetNameEntry,\n} from '../utils/api'\nimport { formatShortAddress, formatTwitterLink } from '../utils/format'\nimport { ButtonWithFooter } from './ButtonWithFooter'\nimport { Link, Megaphone, Verified } from './icons'\nimport { LabeledInput } from './LabeledInput'\nimport { PostTweet } from './PostTweet'\nimport { PoweredByFooter } from './PoweredByFooter'\nimport { StepDetail } from './StepDetail'\nimport { TwitterHandleNFT } from './TwitterHandleNFT'\n\nconst handleFromTweetUrl = (raw: string | undefined): string | undefined => {\n  if (!raw) return undefined\n  return raw.split('/')[3]\n}\n\nconst tweetIdFromTweetUrl = (raw: string | undefined): string | undefined => {\n  if (!raw) return undefined\n  return raw.split('/')[5]?.split('?')[0]\n}\n\nexport const NameEntryClaim = ({\n  dev = false,\n  cluster = 'mainnet-beta',\n  connection,\n  secondaryConnection,\n  wallet,\n  namespaceName = 'twitter',\n  appName,\n  appTwitter,\n  notify,\n  onComplete,\n}: {\n  dev?: boolean\n  cluster?: Cluster\n  connection: Connection | null\n  secondaryConnection?: Connection\n  wallet: Wallet | null\n  namespaceName?: string\n  appName?: string\n  appTwitter?: string\n  notify?: (arg: { message?: string; txid?: string }) => void\n  onComplete?: (arg0: string) => void\n}) => {\n  const [verifyError, setVerifyError] = useState<React.ReactNode | undefined>(\n    undefined\n  )\n  const [ownedError, setOwnedError] = useState<React.ReactNode | undefined>(\n    undefined\n  )\n  const [claimError, setClaimError] = useState<React.ReactNode | undefined>(\n    undefined\n  )\n  const [loadingVerify, setLoadingVerify] = useState(false)\n  const [loadingRevoke, setLoadingRevoke] = useState(false)\n  const [loadingClaim, setLoadingClaim] = useState(false)\n\n  const [tweetSent, setTweetSent] = useState(false)\n  const [tweetUrl, setTweetUrl] = useState<string | undefined>(undefined)\n  const handle = handleFromTweetUrl(tweetUrl)\n  const tweetId = tweetIdFromTweetUrl(tweetUrl)\n  const [claimed, setClaimed] = useState(false)\n\n  const { reverseEntryData, getReverseEntryData } = useReverseEntry(\n    connection,\n    wallet?.publicKey\n  )\n\n  const { nameEntryData, loadingNameEntry, refreshNameEntryData } =\n    useNameEntryData(secondaryConnection || connection, namespaceName, handle)\n\n  const { claimRequest, loadingClaimRequest, getClaimRequestData } =\n    useClaimRequest(connection, namespaceName, handle, wallet?.publicKey)\n\n  const verifyTwitter = async () => {\n    setLoadingVerify(true)\n    setVerifyError(undefined)\n    setOwnedError(undefined)\n    try {\n      const response = await fetch(\n        `${apiBase(\n          dev\n        )}/twitter/approve?tweetId=${tweetId}&publicKey=${wallet?.publicKey.toString()}&handle=${handle}${\n          cluster && `&cluster=${cluster}`\n        }`\n      )\n      const json = await response.json()\n      if (response.status !== 200) throw new Error(json.error)\n    } catch (e) {\n      setVerifyError(`Failed to approve tweet url: ${e}`)\n    } finally {\n      await getClaimRequestData()\n      setLoadingVerify(false)\n    }\n  }\n\n  const revokeHandle = async () => {\n    setLoadingRevoke(true)\n    setOwnedError(undefined)\n    try {\n      const response = await fetch(\n        `${apiBase(\n          dev\n        )}/twitter/revoke?tweetId=${tweetId}&publicKey=${wallet?.publicKey.toString()}&handle=${handle}${\n          cluster && `&cluster=${cluster}`\n        }`\n      )\n      await refreshNameEntryData()\n      const json = await response.json()\n      if (response.status !== 200) throw new Error(json.error)\n    } catch (e) {\n      setOwnedError(`Failed to revoke tweet url: ${e}`)\n    } finally {\n      setLoadingRevoke(false)\n    }\n  }\n\n  const setDefault = async () => {\n    setLoadingRevoke(true)\n    setOwnedError(undefined)\n    try {\n      if (!handle) throw new Error('Handle not found')\n      if (!connection) throw new Error('Connection not found')\n      if (!wallet) throw new Error('Wallet not connected')\n      console.log('Setting reverse entry entry:', handle)\n      const txid = await setReverseEntry(\n        connection,\n        wallet,\n        namespaceName,\n        handle,\n        nameEntryData?.nameEntry.parsed.mint!\n      )\n      notify && notify({ message: 'Set default successful', txid })\n      setClaimed(true)\n      onComplete && onComplete(handle)\n    } catch (e) {\n      console.log(e)\n      setOwnedError(`Failed to set default handle: ${e}`)\n    } finally {\n      setLoadingRevoke(false)\n    }\n  }\n\n  useEffect(() => {\n    if (\n      tweetUrl &&\n      tweetSent &&\n      (!claimRequest || !claimRequest?.parsed?.isApproved)\n    ) {\n      verifyTwitter()\n    }\n  }, [wallet, tweetUrl, handle, tweetSent, tweetId, claimRequest])\n\n  const handleClaim = async () => {\n    try {\n      if (!handle) throw new Error('Handle not found')\n      if (!connection) throw new Error('Connection not found')\n      if (!wallet) throw new Error('Wallet not connected')\n      setLoadingClaim(true)\n      setClaimError(undefined)\n      const checkNameEntry = await tryGetNameEntry(\n        connection,\n        namespaceName,\n        handle\n      )\n      if (!checkNameEntry) {\n        console.log('Initializing and claiming entry:', handle)\n        const txid = await initAndClaimEntry(\n          cluster,\n          connection,\n          wallet,\n          namespaceName,\n          handle,\n          null\n        )\n        notify && notify({ message: 'Claim successful', txid })\n        setClaimed(true)\n        onComplete && onComplete(handle)\n      } else if (checkNameEntry && !checkNameEntry.parsed.isClaimed) {\n        console.log('Claiming entry:', handle)\n        const txid = await claimEntry(\n          connection,\n          wallet,\n          namespaceName,\n          handle,\n          checkNameEntry.parsed.mint,\n          null\n        )\n        notify && notify({ message: 'Claim successful', txid })\n        setClaimed(true)\n        onComplete && onComplete(handle)\n      } else {\n        console.log('Revoking and claiming entry:', handle)\n        const txid = await revokeAndClaim(\n          cluster,\n          connection,\n          wallet,\n          namespaceName,\n          handle,\n          null,\n          reverseEntryData?.pubkey!,\n          claimRequest!.pubkey,\n          checkNameEntry.parsed.mint,\n          nameEntryData!.owner!\n        )\n        notify && notify({ message: 'Init and claim successful', txid })\n        setClaimed(true)\n        onComplete && onComplete(handle)\n      }\n    } catch (e: any) {\n      if (e?.message.includes('0x1')) {\n        setClaimError(<>Not enough sol!</>)\n      } else {\n        setClaimError(<>Failed to claim: {e?.message}</>)\n      }\n    } finally {\n      refreshNameEntryData()\n      getReverseEntryData()\n      setLoadingClaim(false)\n    }\n  }\n\n  const alreadyOwned =\n    nameEntryData &&\n    nameEntryData.owner?.toString() &&\n    !nameEntryData.isOwnerPDA\n      ? true\n      : false\n\n  return (\n    <Wrapper>\n      <>\n        <Instruction>\n          {appName ? `${appName} uses` : 'Use'} Cardinal to link your Twitter\n          identity to your <strong>Solana</strong> address.\n        </Instruction>\n        {(!wallet?.publicKey || !connection) && (\n          <Alert\n            style={{ marginBottom: '20px' }}\n            message={\n              <>\n                <div>Connect wallet to continue</div>\n              </>\n            }\n            type=\"warning\"\n            showIcon\n          />\n        )}\n        {reverseEntryData?.parsed.entryName && (\n          <Alert\n            style={{ marginBottom: '20px', width: '100%' }}\n            message={\n              <>\n                <div>\n                  Your address is linked to{' '}\n                  {formatTwitterLink(\n                    reverseEntryData?.parsed.entryName as string\n                  )}\n                  . You can change your Twitter handle by linking a new profile.\n                </div>\n              </>\n            }\n            type=\"info\"\n            showIcon\n          />\n        )}\n        <DetailsWrapper>\n          <StepDetail\n            disabled={!wallet?.publicKey || !connection}\n            icon={<Megaphone />}\n            title=\"Tweet!\"\n            description={\n              <>\n                <div>Tweet your public key</div>\n                <PostTweet\n                  wallet={wallet}\n                  appName={appName}\n                  appTwitter={appTwitter}\n                  disabled={false}\n                  callback={() => setTweetSent(true)}\n                  cluster={cluster}\n                />\n              </>\n            }\n          />\n          <StepDetail\n            disabled={!tweetSent}\n            icon={<Link />}\n            title=\"Paste the URL of the tweet\"\n            description={\n              <div>\n                <LabeledInput\n                  disabled={!tweetSent}\n                  label=\"Tweet\"\n                  name=\"tweet\"\n                  onChange={(e) => setTweetUrl(e.target.value)}\n                />\n              </div>\n            }\n          />\n          <StepDetail\n            disabled={!handle}\n            icon={<Verified />}\n            title=\"Claim your handle\"\n            description={\n              <>\n                <div>\n                  You will receive a non-tradeable NFT to prove you own your\n                  Twitter handle.\n                </div>\n                {handle && (\n                  <div\n                    style={{\n                      display: 'flex',\n                      alignItems: 'center',\n                      gap: '20px',\n                      paddingTop: '20px',\n                    }}\n                  >\n                    <TwitterHandleNFT\n                      handle={handle}\n                      cluster={cluster}\n                      dev={dev}\n                    />\n                    <div\n                      style={{\n                        padding: '10px',\n                        maxWidth: 'calc(100% - 120px - 20px)',\n                      }}\n                    >\n                      {claimRequest && claimRequest.parsed.isApproved ? (\n                        <StyledAlert>\n                          <Alert\n                            style={{\n                              margin: '10px 0px',\n                              height: 'auto',\n                              wordBreak: 'break-word',\n                            }}\n                            message={\n                              <>\n                                <div>\n                                  Verified ownership of{' '}\n                                  {formatTwitterLink(handle)}\n                                </div>\n                              </>\n                            }\n                            type=\"success\"\n                            showIcon\n                          />\n                        </StyledAlert>\n                      ) : loadingVerify || loadingClaimRequest ? (\n                        <div style={{ padding: '10px' }}>\n                          <LoadingSpinner fill=\"#000\" />\n                        </div>\n                      ) : (\n                        <StyledAlert>\n                          <Alert\n                            style={{\n                              marginTop: '10px',\n                              height: 'auto',\n                              wordBreak: 'break-word',\n                            }}\n                            message={\n                              <>\n                                <div>{verifyError}</div>\n                              </>\n                            }\n                            type=\"error\"\n                            showIcon\n                          />\n                          <ButtonWrapper>\n                            <ButtonLight onClick={() => verifyTwitter()}>\n                              Retry\n                            </ButtonLight>\n                          </ButtonWrapper>\n                        </StyledAlert>\n                      )}\n                      {claimRequest &&\n                        claimRequest.parsed.isApproved &&\n                        !claimed &&\n                        (loadingNameEntry || loadingRevoke ? (\n                          <div style={{ padding: '10px' }}>\n                            <LoadingSpinner fill=\"#000\" />\n                          </div>\n                        ) : (\n                          alreadyOwned && (\n                            <>\n                              <Alert\n                                style={{\n                                  marginBottom: '10px',\n                                  height: 'auto',\n                                  wordBreak: 'break-word',\n                                }}\n                                message={\n                                  <>\n                                    <div>\n                                      Owned by{' '}\n                                      {formatShortAddress(nameEntryData?.owner)}\n                                    </div>\n                                  </>\n                                }\n                                type=\"warning\"\n                                showIcon\n                              />\n                              {nameEntryData?.owner?.toString() ===\n                              wallet?.publicKey?.toString() ? (\n                                <>\n                                  <div>\n                                    You already own this handle! If you want to\n                                    set it as your default, click below.\n                                  </div>\n                                  <ButtonWrapper>\n                                    <ButtonLight onClick={() => setDefault()}>\n                                      Set Default\n                                    </ButtonLight>\n                                  </ButtonWrapper>\n                                </>\n                              ) : (\n                                <>\n                                  <div>\n                                    If you wish to continue, you will revoke\n                                    this handle from them.\n                                  </div>\n                                  <ButtonWrapper>\n                                    <ButtonLight onClick={() => revokeHandle()}>\n                                      Revoke\n                                    </ButtonLight>\n                                  </ButtonWrapper>\n                                </>\n                              )}\n                              {ownedError && (\n                                <StyledAlert>\n                                  <Alert\n                                    style={{\n                                      marginTop: '10px',\n                                      height: 'auto',\n                                      wordBreak: 'break-word',\n                                    }}\n                                    message={\n                                      <>\n                                        <div>{ownedError}</div>\n                                      </>\n                                    }\n                                    type=\"error\"\n                                    showIcon\n                                  />\n                                </StyledAlert>\n                              )}\n                            </>\n                          )\n                        ))}\n                      {claimError && (\n                        <StyledAlert>\n                          <Alert\n                            style={{ marginTop: '10px', height: 'auto' }}\n                            message={\n                              <>\n                                <div>{claimError}</div>\n                              </>\n                            }\n                            type=\"error\"\n                            showIcon\n                          />\n                        </StyledAlert>\n                      )}\n                    </div>\n                  </div>\n                )}\n              </>\n            }\n          />\n        </DetailsWrapper>\n        <ButtonWithFooter\n          loading={loadingClaim}\n          complete={claimed}\n          disabled={\n            !claimRequest ||\n            !claimRequest.parsed.isApproved ||\n            loadingNameEntry ||\n            alreadyOwned\n          }\n          onClick={handleClaim}\n          footer={<PoweredByFooter />}\n        >\n          Claim {handle && `@${handle}`}\n        </ButtonWithFooter>\n      </>\n    </Wrapper>\n  )\n}\n\nconst ButtonWrapper = styled.div`\n  display: flex;\n  margin-top: 5px;\n  justify-content: center;\n`\n\nconst ButtonLight = styled.div`\n  border-radius: 5px;\n  padding: 5px 8px;\n  border: none;\n  background: #eee;\n  color: #777;\n  cursor: pointer;\n  transition: 0.1s all;\n  &:hover {\n    background: #ddd;\n  }\n`\n\nconst StyledAlert = styled.div``\n\nconst Wrapper = styled.div`\n  padding: 10px 28px 28px 28px;\n`\n\nconst Instruction = styled.h2`\n  margin-top: 0px;\n  margin-bottom: 20px;\n  font-weight: normal;\n  font-size: 24px;\n  line-height: 30px;\n  text-align: center;\n  letter-spacing: -0.02em;\n  color: #000000;\n`\n\nconst DetailsWrapper = styled.div`\n  display: grid;\n  grid-row-gap: 28px;\n`\n"]}