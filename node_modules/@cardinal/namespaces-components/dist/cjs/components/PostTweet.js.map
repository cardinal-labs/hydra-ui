{"version":3,"file":"PostTweet.js","sourceRoot":"","sources":["../../../src/components/PostTweet.tsx"],"names":[],"mappings":";;;;;AAAA,qEAAqC;AAGrC,6CAA0C;AAC1C,uDAAoD;AAE7C,MAAM,SAAS,GAAG,CAAC,EACxB,MAAM,EACN,OAAO,EACP,UAAU,EACV,QAAQ,EACR,QAAQ,EACR,OAAO,GAQR,EAAE,EAAE;;IACH,MAAM,IAAI,GAAG,eAAe,CAC1B,MAAA,MAAM,aAAN,MAAM,uBAAN,MAAM,CAAE,SAAS,0CAAE,QAAQ,EAAE,EAC7B,OAAO,EACP,UAAU,EACV,OAAO,CACR,CAAC;IACF,OAAO,CACL,uBAAC,oBAAoB,kBACnB,IAAI,EAAE,IAAI,EACV,OAAO,EAAE,GAAG,EAAE,CAAC,QAAQ,IAAI,QAAQ,EAAE,EACrC,MAAM,EAAC,QAAQ,EACf,GAAG,EAAC,qBAAqB,gBAEzB,uBAAC,aAAa,kBAAC,OAAO,EAAC,SAAS,EAAC,QAAQ,EAAE,QAAQ,gBACjD,+CACE,KAAK,EAAE;oBACL,OAAO,EAAE,MAAM;oBACf,UAAU,EAAE,QAAQ;iBACrB,iBAED,uBAAC,yBAAW,KAAG,EACf,+CACE,KAAK,EAAE;4BACL,QAAQ,EAAE,UAAU;4BACpB,MAAM,EAAE,KAAK;4BACb,UAAU,EAAE,KAAK;4BACjB,WAAW,EAAE,MAAM;yBACpB,4BAGI,KACH,IAEQ,IACK,CACxB,CAAC;AACJ,CAAC,CAAC;AAnDW,QAAA,SAAS,aAmDpB;AAEF,MAAM,oBAAoB,GAAG,gBAAM,CAAC,CAAC,CAAA;;;CAGpC,CAAC;AAEF,MAAM,aAAa,GAAG,IAAA,gBAAM,EAAC,eAAM,CAAC,CAAA;;;;;;CAMnC,CAAC;AAEF,MAAM,eAAe,GAAG,CACtB,MAA0B,EAC1B,OAA2B,EAC3B,UAA8B,EAC9B,OAA4B,EACpB,EAAE;IACV,IAAI,CAAC,MAAM;QAAE,OAAO,EAAE,CAAC;IACvB,MAAM,IAAI,GAAG;QACX,wCAAwC;QACxC,kBAAkB,CAChB;YACE,8CACE,UAAU,IAAI,OAAO,CAAC,CAAC,CAAC,OAAO,UAAU,IAAI,OAAO,EAAE,CAAC,CAAC,CAAC,EAC3D,+DAA+D,MAAM,MAAM;YAC3E,wDACE,OAAO,KAAK,QAAQ,CAAC,CAAC,CAAC,iBAAiB,CAAC,CAAC,CAAC,EAC7C,GAAG;SACJ,CAAC,IAAI,CAAC,EAAE,CAAC,CACX;KACF,CAAC,IAAI,CAAC,EAAE,CAAC,CAAC;IACX,OAAO,IAAI,CAAC;AACd,CAAC,CAAC","sourcesContent":["import styled from \"@emotion/styled\";\nimport type { Wallet } from \"@saberhq/solana-contrib\";\n\nimport { Button } from \"../common/Button\";\nimport { TwitterIcon } from \"../common/TwitterIcon\";\n\nexport const PostTweet = ({\n  wallet,\n  appName,\n  appTwitter,\n  disabled,\n  callback,\n  cluster,\n}: {\n  wallet: Wallet | null;\n  appTwitter?: string | undefined;\n  appName?: string | undefined;\n  disabled: boolean;\n  callback?: () => void;\n  cluster?: string | undefined;\n}) => {\n  const link = useGenerateLink(\n    wallet?.publicKey?.toString(),\n    appName,\n    appTwitter,\n    cluster\n  );\n  return (\n    <TwitterButtonWrapper\n      href={link}\n      onClick={() => callback && callback()}\n      target=\"_blank\"\n      rel=\"noreferrer noopener\"\n    >\n      <TwitterButton variant=\"primary\" disabled={disabled}>\n        <div\n          style={{\n            display: \"flex\",\n            alignItems: \"center\",\n          }}\n        >\n          <TwitterIcon />\n          <span\n            style={{\n              position: \"relative\",\n              bottom: \"1px\",\n              marginLeft: \"6px\",\n              marginRight: \"12px\",\n            }}\n          >\n            Verify\n          </span>\n        </div>\n        {/* <i className=\"fas fa-chevron-right\" /> */}\n      </TwitterButton>\n    </TwitterButtonWrapper>\n  );\n};\n\nconst TwitterButtonWrapper = styled.a`\n  margin-top: 5px;\n  display: inline-block;\n`;\n\nconst TwitterButton = styled(Button)`\n  display: flex;\n  align-items: center;\n  justify-content: space-between;\n  font-size: 12px;\n  padding: 0 12px;\n`;\n\nconst useGenerateLink = (\n  pubkey: string | undefined,\n  appName: string | undefined,\n  appTwitter: string | undefined,\n  cluster?: string | undefined\n): string => {\n  if (!pubkey) return \"\";\n  const link = [\n    `https://twitter.com/intent/tweet?text=`,\n    encodeURIComponent(\n      [\n        `Claiming my Twitter handle as a @Solana NFT${\n          appTwitter || appName ? ` on ${appTwitter || appName}` : \"\"\n        } using @cardinal_labs protocol and linking it to my address ${pubkey}\\n\\n`,\n        `Verify and claim yours at https://twitter.cardinal.so${\n          cluster === \"devnet\" ? \"?cluster=devnet\" : \"\"\n        }!`,\n      ].join(\"\")\n    ),\n  ].join(\"\");\n  return link;\n};\n"]}