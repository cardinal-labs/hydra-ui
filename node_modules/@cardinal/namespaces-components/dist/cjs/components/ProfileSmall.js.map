{"version":3,"file":"ProfileSmall.js","sourceRoot":"","sources":["../../../src/components/ProfileSmall.tsx"],"names":[],"mappings":";;;;AACA,uCAA6C;AAE7C,4CAA6C;AAC7C,iDAA6C;AAC7C,qDAAiD;AAE1C,MAAM,YAAY,GAAG,CAAC,EAC3B,UAAU,EACV,OAAO,EACP,IAAI,EACJ,OAAO,EACP,WAAW,EACX,SAAS,EACT,KAAK,GAgBN,EAAE,EAAE;IACH,OAAO,CACL,+CACE,SAAS,EAAE,GAAG,SAAS,oCAAoC,EAC3D,KAAK,EAAE,KAAK,EACZ,OAAO,EAAE,OAAO,iBAEhB,uBAAC,2BAAY,IACX,UAAU,EAAE,UAAU,EACtB,OAAO,EAAE,OAAO,IAAI,SAAS,EAC7B,MAAM,EAAC,MAAM,EACb,KAAK,EAAC,MAAM,EACZ,IAAI,EAAE,IAAI,EACV,WAAW,EACT,WAAW,IAAI,CACb,8CACE,KAAK,EAAE;wBACL,KAAK,EAAE,oBAAoB;wBAC3B,MAAM,EAAE,SAAS;wBACjB,QAAQ,EAAE,QAAQ;wBAClB,MAAM,EAAE,MAAM;wBACd,KAAK,EAAE,MAAM;qBACd,gBAED,uBAAC,iBAAY,IACX,KAAK,EAAE;4BACL,QAAQ,EAAE,UAAU;4BACpB,MAAM,EAAE,MAAM;4BACd,KAAK,EAAE,MAAM;4BACb,IAAI,EAAE,MAAM;4BACZ,GAAG,EAAE,MAAM;yBACZ,EACD,SAAS,EAAC,mDAAmD,GAC7D,IACE,CACP,GAEH,EACF,4CACE,8CAAK,SAAS,EAAE,QAAQ,IAAI,CAAC,CAAC,CAAC,OAAO,CAAC,CAAC,CAAC,OAAO,EAAE,gBAChD,uBAAC,+BAAc,IACb,KAAK,EAAE,EAAE,aAAa,EAAE,MAAM,EAAE,EAChC,UAAU,EAAE,UAAU,EACtB,OAAO,EAAE,OAAO,IAAI,SAAS,EAC7B,MAAM,EAAC,MAAM,EACb,KAAK,EAAC,OAAO,EACb,IAAI,EAAE,IAAI,GACV,IACE,EACN,8CAAK,SAAS,EAAC,uBAAuB,gBAAE,IAAA,oBAAW,EAAC,OAAO,CAAC,IAAO,IAC/D,KACF,CACP,CAAA;AACH,CAAC,CAAA;AA5EY,QAAA,YAAY,gBA4ExB","sourcesContent":["import type { Connection, PublicKey } from '@solana/web3.js'\nimport { HiUserCircle } from 'react-icons/hi'\n\nimport { shortPubKey } from '../utils/format'\nimport { AddressImage } from './AddressImage'\nimport { DisplayAddress } from './DisplayAddress'\n\nexport const ProfileSmall = ({\n  connection,\n  address,\n  dark,\n  onClick,\n  placeholder,\n  className,\n  style,\n}: {\n  /** Solana RPC Connection to load this profile  */\n  connection: Connection\n  /** Address for which this profile is for */\n  address: PublicKey | undefined\n  /** Boolean for whether this should load dark or light loading bars */\n  dark?: boolean\n  /** onClick handler for clicking this profile */\n  onClick?: () => void\n  /** Placeholder for showing while the avatar is loading */\n  placeholder?: React.ReactNode\n  /** Optional class name to add to the profile div */\n  className?: string\n  /** Optional style prop to add to the profile div */\n  style?: React.CSSProperties\n}) => {\n  return (\n    <div\n      className={`${className} flex cursor-pointer gap-2 text-sm`}\n      style={style}\n      onClick={onClick}\n    >\n      <AddressImage\n        connection={connection}\n        address={address || undefined}\n        height=\"40px\"\n        width=\"40px\"\n        dark={dark}\n        placeholder={\n          placeholder || (\n            <div\n              style={{\n                color: 'rgb(209, 213, 219)',\n                cursor: 'pointer',\n                overflow: 'hidden',\n                height: '40px',\n                width: '40px',\n              }}\n            >\n              <HiUserCircle\n                style={{\n                  position: 'relative',\n                  height: '50px',\n                  width: '50px',\n                  left: '-5px',\n                  top: '-5px',\n                }}\n                className=\"relative left-[-5px] top-[-5px] h-[50px] w-[50px]\"\n              />\n            </div>\n          )\n        }\n      />\n      <div>\n        <div className={`text-${dark ? 'white' : 'black'}`}>\n          <DisplayAddress\n            style={{ pointerEvents: 'none' }}\n            connection={connection}\n            address={address || undefined}\n            height=\"20px\"\n            width=\"100px\"\n            dark={dark}\n          />\n        </div>\n        <div className=\"text-sm text-gray-500\">{shortPubKey(address)}</div>\n      </div>\n    </div>\n  )\n}\n"]}