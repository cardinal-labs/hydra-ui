"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.DisplayAddress = void 0;
const tslib_1 = require("tslib");
const jsx_runtime_1 = require("@emotion/react/jsx-runtime");
const react_content_loader_1 = tslib_1.__importDefault(require("react-content-loader"));
const useAddressName_1 = require("../hooks/useAddressName");
const format_1 = require("../utils/format");
const DisplayAddress = ({ connection, address, height = '20px', width = '100px', dark = false, style, }) => {
    const { displayName, loadingName } = (0, useAddressName_1.useAddressName)(connection, address);
    if (!address)
        return (0, jsx_runtime_1.jsx)(jsx_runtime_1.Fragment, {});
    return loadingName ? ((0, jsx_runtime_1.jsx)("div", Object.assign({ style: Object.assign(Object.assign({}, style), { height,
            width, overflow: 'hidden' }) }, { children: (0, jsx_runtime_1.jsx)(react_content_loader_1.default, Object.assign({ backgroundColor: dark ? '#333' : undefined, foregroundColor: dark ? '#555' : undefined }, { children: (0, jsx_runtime_1.jsx)("rect", { style: Object.assign({}, style), x: 0, y: 0, width: width, height: height }) })) }))) : ((0, jsx_runtime_1.jsx)("div", Object.assign({ style: Object.assign({ display: 'flex', gap: '5px' }, style) }, { children: (displayName === null || displayName === void 0 ? void 0 : displayName.includes('@'))
            ? (0, format_1.formatTwitterLink)(displayName)
            : displayName || (0, format_1.formatShortAddress)(address) })));
};
exports.DisplayAddress = DisplayAddress;
//# sourceMappingURL=DisplayAddress.js.map