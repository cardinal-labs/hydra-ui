"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.PostTweet = void 0;
const tslib_1 = require("tslib");
const jsx_runtime_1 = require("@emotion/react/jsx-runtime");
const styled_1 = tslib_1.__importDefault(require("@emotion/styled"));
const Button_1 = require("../common/Button");
const TwitterIcon_1 = require("../common/TwitterIcon");
const PostTweet = ({ wallet, appName, appTwitter, disabled, callback, cluster, }) => {
    var _a;
    const link = useGenerateLink((_a = wallet === null || wallet === void 0 ? void 0 : wallet.publicKey) === null || _a === void 0 ? void 0 : _a.toString(), appName, appTwitter, cluster);
    return ((0, jsx_runtime_1.jsx)(TwitterButtonWrapper, Object.assign({ href: link, onClick: () => callback && callback(), target: "_blank", rel: "noreferrer noopener" }, { children: (0, jsx_runtime_1.jsx)(TwitterButton, Object.assign({ variant: "primary", disabled: disabled }, { children: (0, jsx_runtime_1.jsxs)("div", Object.assign({ style: {
                    display: "flex",
                    alignItems: "center",
                } }, { children: [(0, jsx_runtime_1.jsx)(TwitterIcon_1.TwitterIcon, {}), (0, jsx_runtime_1.jsx)("span", Object.assign({ style: {
                            position: "relative",
                            bottom: "1px",
                            marginLeft: "6px",
                            marginRight: "12px",
                        } }, { children: "Verify" }))] })) })) })));
};
exports.PostTweet = PostTweet;
const TwitterButtonWrapper = styled_1.default.a `
  margin-top: 5px;
  display: inline-block;
`;
const TwitterButton = (0, styled_1.default)(Button_1.Button) `
  display: flex;
  align-items: center;
  justify-content: space-between;
  font-size: 12px;
  padding: 0 12px;
`;
const useGenerateLink = (pubkey, appName, appTwitter, cluster) => {
    if (!pubkey)
        return "";
    const link = [
        `https://twitter.com/intent/tweet?text=`,
        encodeURIComponent([
            `Claiming my Twitter handle as a @Solana NFT${appTwitter || appName ? ` on ${appTwitter || appName}` : ""} using @cardinal_labs protocol and linking it to my address ${pubkey}\n\n`,
            `Verify and claim yours at https://twitter.cardinal.so${cluster === "devnet" ? "?cluster=devnet" : ""}!`,
        ].join("")),
    ].join("");
    return link;
};
//# sourceMappingURL=PostTweet.js.map