{"version":3,"file":"AddressImage.js","sourceRoot":"","sources":["../../../src/components/AddressImage.tsx"],"names":[],"mappings":";;;;;AACA,wFAAgD;AAChD,uCAA6C;AAE7C,8DAA0D;AAEnD,MAAM,YAAY,GAAG,CAAC,EAC3B,UAAU,EACV,OAAO,EACP,KAAK,EACL,MAAM,GAAG,OAAO,EAChB,KAAK,GAAG,OAAO,EACf,IAAI,GAAG,KAAK,EACZ,WAAW,GASZ,EAAE,EAAE;IACH,MAAM,EAAE,YAAY,EAAE,YAAY,EAAE,GAAG,IAAA,iCAAe,EAAC,UAAU,EAAE,OAAO,CAAC,CAAA;IAE3E,IAAI,CAAC,OAAO;QAAE,OAAO,kDAAK,CAAA;IAC1B,OAAO,YAAY,CAAC,CAAC,CAAC,CACpB,8CACE,KAAK,kCACA,KAAK,KACR,MAAM;YACN,KAAK,EACL,YAAY,EAAE,KAAK,EACnB,QAAQ,EAAE,QAAQ,mBAGpB,uBAAC,8BAAa,kBACZ,eAAe,EAAE,IAAI,CAAC,CAAC,CAAC,MAAM,CAAC,CAAC,CAAC,SAAS,EAC1C,eAAe,EAAE,IAAI,CAAC,CAAC,CAAC,MAAM,CAAC,CAAC,CAAC,SAAS,gBAE1C,iCACE,CAAC,EAAC,GAAG,EACL,CAAC,EAAC,GAAG,EACL,EAAE,EAAE,KAAK,EACT,EAAE,EAAE,MAAM,EACV,KAAK,EAAE,KAAK,EACZ,MAAM,EAAE,MAAM,GACd,IACY,IACZ,CACP,CAAC,CAAC,CAAC,YAAY,CAAC,CAAC,CAAC,CACjB,gCACE,KAAK,kCACA,KAAK,KACR,MAAM,EAAE,MAAM,EACd,KAAK,EAAE,KAAK,EACZ,YAAY,EAAE,KAAK,KAErB,GAAG,EAAE,WAAW,OAAO,CAAC,QAAQ,EAAE,EAAE,EACpC,GAAG,EAAE,YAAY,GACZ,CACR,CAAC,CAAC,CAAC,CACF,2DAAG,WAAW,GAAI,IAAI,CACpB,uBAAC,iBAAY,IAAC,KAAK,EAAE,EAAE,KAAK,EAAE,MAAM,EAAE,EAAE,SAAS,EAAC,eAAe,GAAG,CACrE,CACF,CAAA;AACH,CAAC,CAAA;AA5DY,QAAA,YAAY,gBA4DxB","sourcesContent":["import type { Connection, PublicKey } from '@solana/web3.js'\nimport ContentLoader from 'react-content-loader'\nimport { HiUserCircle } from 'react-icons/hi'\n\nimport { useAddressImage } from '../hooks/useAddressImage'\n\nexport const AddressImage = ({\n  connection,\n  address,\n  style,\n  height = '150px',\n  width = '150px',\n  dark = false,\n  placeholder,\n}: {\n  connection: Connection\n  address: PublicKey | undefined\n  height?: string\n  width?: string\n  dark?: boolean\n  placeholder?: React.ReactNode\n  style?: React.CSSProperties\n}) => {\n  const { addressImage, loadingImage } = useAddressImage(connection, address)\n\n  if (!address) return <></>\n  return loadingImage ? (\n    <div\n      style={{\n        ...style,\n        height,\n        width,\n        borderRadius: '50%',\n        overflow: 'hidden',\n      }}\n    >\n      <ContentLoader\n        backgroundColor={dark ? '#333' : undefined}\n        foregroundColor={dark ? '#555' : undefined}\n      >\n        <rect\n          x=\"0\"\n          y=\"0\"\n          rx={width}\n          ry={height}\n          width={width}\n          height={height}\n        />\n      </ContentLoader>\n    </div>\n  ) : addressImage ? (\n    <img\n      style={{\n        ...style,\n        height: height,\n        width: width,\n        borderRadius: '50%',\n      }}\n      alt={`profile-${address.toString()}`}\n      src={addressImage}\n    ></img>\n  ) : (\n    <>{placeholder}</> || (\n      <HiUserCircle style={{ width, height }} className=\"text-gray-300\" />\n    )\n  )\n}\n"]}