"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.PopoverItem = exports.Popover = void 0;
const tslib_1 = require("tslib");
const jsx_runtime_1 = require("@emotion/react/jsx-runtime");
const styled_1 = tslib_1.__importDefault(require("@emotion/styled"));
const react_1 = require("@headlessui/react");
const react_2 = require("react");
const react_popper_1 = require("react-popper");
const Arrow = styled_1.default.div `
  ::before {
    position: absolute;
    width: 8px;
    height: 8px;
    z-index: -1;
    content: '';
    transform: rotate(45deg);
  }
  &.arrow-top {
    bottom: -5px;
    ::before {
      border-top: none;
      border-left: none;
    }
  }
  &.arrow-bottom {
    top: -5px;
    ::before {
      border-bottom: none;
      border-right: none;
    }
  }
  &.arrow-bottom-end {
    top: -5px;
    ::before {
      border-bottom: none;
      border-right: none;
    }
  }
  &.arrow-left {
    right: -5px;
    ::before {
      border-bottom: none;
      border-left: none;
    }
  }
  &.arrow-right {
    left: -5px;
    ::before {
      border-right: none;
      border-top: none;
    }
  }
`;
const Popover = ({ content, children, placement = 'right', offset = [-25, 5], }) => {
    var _a, _b;
    const [referenceElement, setReferenceElement] = (0, react_2.useState)(null);
    const [popperElement, setPopperElement] = (0, react_2.useState)(null);
    const [arrowElement, setArrowElement] = (0, react_2.useState)(null);
    const { styles, attributes } = (0, react_popper_1.usePopper)(referenceElement, popperElement, {
        placement,
        modifiers: [
            { name: 'offset', options: { offset } },
            { name: 'arrow', options: { element: arrowElement } },
        ],
    });
    return ((0, jsx_runtime_1.jsxs)(react_1.Popover, { children: [(0, jsx_runtime_1.jsx)(react_1.Popover.Button, Object.assign({ as: react_2.Fragment, ref: setReferenceElement }, { children: children })), (0, jsx_runtime_1.jsxs)(react_1.Popover.Panel, Object.assign({ ref: setPopperElement, style: Object.assign(Object.assign({}, styles.popper), { zIndex: 100 }) }, attributes.popper, { children: [content, (0, jsx_runtime_1.jsx)(Arrow, Object.assign({ className: `arrow-${(_b = (_a = attributes.popper) === null || _a === void 0 ? void 0 : _a['data-popper-placement']) !== null && _b !== void 0 ? _b : ''}`, ref: setArrowElement, style: Object.assign({}, styles.arrow) }, attributes.arrow))] }))] }));
};
exports.Popover = Popover;
const PopoverItem = ({ className, children, }) => ((0, jsx_runtime_1.jsx)("div", Object.assign({ className: `${className} rounded-md px-2 py-1 hover:bg-[rgba(255,255,255,0.1)]` }, { children: children })));
exports.PopoverItem = PopoverItem;
//# sourceMappingURL=Popover.js.map