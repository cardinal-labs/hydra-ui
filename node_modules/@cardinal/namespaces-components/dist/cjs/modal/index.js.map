{"version":3,"file":"index.js","sourceRoot":"","sources":["../../../src/modal/index.tsx"],"names":[],"mappings":";;;;;AAAA,0CAA6C;AAC7C,qEAAqC;AACrC,0CAA6D;AAC7D,2CAAuE;AACvE,+EAA+C;AAE/C,6DAA+C;AAC/C,yDAA+C;AAE/C,mCAA8C;AAYvC,MAAM,KAAK,GAAyB,CAAC,EAC1C,QAAQ,EACR,MAAM,EACN,SAAS,EACT,aAAa,GAAG,IAAI,EAEpB,MAAM,EACN,eAAe,GAAG,KAAK,GACZ,EAAE,EAAE;IACf,MAAM,cAAc,GAAG,IAAA,mBAAa,EAAC,MAAM,EAAE;QAC3C,MAAM,EAAE,EAAE,QAAQ,EAAE,GAAG,EAAE;QACzB,IAAI,EAAE,EAAE,OAAO,EAAE,CAAC,EAAE;QACpB,KAAK,EAAE,EAAE,OAAO,EAAE,CAAC,EAAE;QACrB,KAAK,EAAE,EAAE,OAAO,EAAE,CAAC,EAAE;KACtB,CAAC,CAAC;IAEH,MAAM,CAAC,EAAE,CAAC,EAAE,EAAE,GAAG,CAAC,GAAG,IAAA,eAAS,EAAC,GAAG,EAAE,CAAC,CAAC;QACpC,CAAC,EAAE,CAAC;QACJ,MAAM,EAAE,EAAE,IAAI,EAAE,CAAC,EAAE,OAAO,EAAE,GAAG,EAAE,QAAQ,EAAE,EAAE,EAAE;KAChD,CAAC,CAAC,CAAC;IACJ,MAAM,IAAI,GAAG,IAAA,8BAAU,EAAC;QACtB,MAAM,EAAE,CAAC,KAAK,EAAE,EAAE;YAChB,GAAG,CAAC;gBACF,CAAC,EAAE,KAAK,CAAC,IAAI,CAAC,CAAC,CAAC,KAAK,CAAC,QAAQ,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;aACtC,CAAC,CAAC;YACH,IACE,KAAK,CAAC,QAAQ,CAAC,CAAC,CAAC,GAAG,GAAG;gBACvB,CAAC,KAAK,CAAC,QAAQ,GAAG,CAAC,IAAI,KAAK,CAAC,SAAS,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,EAC9C;gBACA,SAAS,EAAE,CAAC;aACb;QACH,CAAC;KACF,CAAC,CAAC;IAEH,OAAO,CACL,6DAEE,uBAAC,cAAM,IACL,MAAM,EAAE,IAAA,WAAG,EAAA;;;;;;;;;;;;;;;;;;;;;SAqBV,GACD,EACD,cAAc,CACb,CAAC,KAAK,EAAE,IAAI,EAAE,EAAE,CACd,IAAI,IAAI,CACN,uBAAC,mBAAmB,kBAClB,KAAK,EAAE,KAAK;gBACZ,4CAA4C;gBAC5C,MAAM,EAAE,MAAM,IAAI,KAAK,CAAC,OAAO,CAAC,GAAG,EAAE,KAAK,CAAC,EAC3C,SAAS,EAAE,SAAS,EACpB,aAAa,EAAE,aAAa,gBAE5B,wBAAC,YAAY,gCACA,gBAAgB,IACvB,CAAC,8BAAQ;oBACX,CAAC,iCACM,IAAI,EAAE,KACT,KAAK,EAAE;4BACL,SAAS,EAAE,CAAC,CAAC,EAAE,CACb,CAAC,CAAC,EAAE,EAAE,CAAC,cAAc,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,KAAK,CACxC;yBACF,IAEL,CAAC,CAAC,EAAE,CAAC,eAEP,wBAAC,OAAO,eACL,MAAM,CAAC,CAAC,CAAC,CACR,uBAAC,UAAU,kBACT,IAAI,EAAC,GAAG,EACR,OAAO,EAAE,CAAC,CAAC,EAAE,EAAE;wCACb,CAAC,CAAC,eAAe,EAAE,CAAC;wCACpB,CAAC,CAAC,cAAc,EAAE,CAAC;wCACnB,MAAM,EAAE,CAAC;oCACX,CAAC,gBAED,uBAAC,gBAAQ,KAAG,IACD,CACd,CAAC,CAAC,CAAC,CACF,iCAAO,CACR,EACA,eAAe,CAAC,CAAC,CAAC,CACjB,iCAAO,CACR,CAAC,CAAC,CAAC,CACF,uBAAC,UAAU,kBACT,IAAI,EAAC,GAAG,EACR,OAAO,EAAE,CAAC,CAAC,EAAE,EAAE;wCACb,CAAC,CAAC,eAAe,EAAE,CAAC;wCACpB,CAAC,CAAC,cAAc,EAAE,CAAC;wCACnB,SAAS,EAAE,CAAC;oCACd,CAAC,gBAED,uBAAC,iBAAS,KAAG,IACF,CACd,IACO,EACV,uBAAC,OAAO,cAAE,QAAQ,GAAW,KAChB,IACK,CACvB,CACJ,IACA,CACJ,CAAC;AACJ,CAAC,CAAC;AAzHW,QAAA,KAAK,SAyHhB;AAEF,MAAM,WAAW,GAAG,gBAAM,CAAC,GAAG,CAAA;;;;;;;;;CAS7B,CAAC;AAEF,MAAM,OAAO,GAAG,gBAAM,CAAC,GAAG,CAAA;;;;;;;;CAQzB,CAAC;AAEF,MAAM,UAAU,GAAG,gBAAM,CAAC,CAAC,CAAA;;;;aAId,IAAA,gBAAM,EAAC,GAAG,EAAE,SAAS,CAAC;;;CAGlC,CAAC;AAEF,MAAM,OAAO,GAAG,gBAAM,CAAC,GAAG,CAAA,EAAE,CAAC;AAE7B,MAAM,YAAY,GAAG,IAAA,gBAAM,EAAC,IAAA,cAAQ,EAAC,sBAAa,CAAC,CAAC,CAAA;;;;;;;;;;;;;;;;;;;CAmBnD,CAAC;AAEF,MAAM,mBAAmB,GAAG,IAAA,gBAAM,EAAC,IAAA,cAAQ,EAAC,sBAAa,CAAC,EAAE;IAC1D,iBAAiB,CAAC,IAAI;QACpB,OAAO,IAAI,KAAK,eAAe,CAAC;IAClC,CAAC;CACF,CAAC,CAEA;;;;IAIE,CAAC,EAAE,aAAa,EAAE,EAAE,EAAE,CACtB,aAAa;IACX,CAAC,CAAC,IAAA,WAAG,EAAA;;SAEF;IACH,CAAC,CAAC,IAAA,WAAG,EAAA;;SAEF;CACR,CAAC","sourcesContent":["import { css, Global } from \"@emotion/react\";\nimport styled from \"@emotion/styled\";\nimport { DialogContent, DialogOverlay } from \"@reach/dialog\";\nimport { animated, useSpring, useTransition } from \"@react-spring/web\";\nimport darken from \"polished/lib/color/darken\";\nimport React from \"react\";\nimport { isMobile } from \"react-device-detect\";\nimport { useGesture } from \"react-use-gesture\";\n\nimport { BackIcon, CloseIcon } from \"./icons\";\n\nexport interface ModalProps {\n  children: React.ReactNode;\n  isOpen: boolean;\n  onDismiss: () => void;\n  darkenOverlay?: boolean;\n\n  onBack?: () => void;\n  hideCloseButton?: boolean;\n}\n\nexport const Modal: React.FC<ModalProps> = ({\n  children,\n  isOpen,\n  onDismiss,\n  darkenOverlay = true,\n\n  onBack,\n  hideCloseButton = false,\n}: ModalProps) => {\n  const fadeTransition = useTransition(isOpen, {\n    config: { duration: 150 },\n    from: { opacity: 0 },\n    enter: { opacity: 1 },\n    leave: { opacity: 0 },\n  });\n\n  const [{ y }, set] = useSpring(() => ({\n    y: 0,\n    config: { mass: 1, tension: 210, friction: 20 },\n  }));\n  const bind = useGesture({\n    onDrag: (state) => {\n      set({\n        y: state.down ? state.movement[1] : 0,\n      });\n      if (\n        state.movement[1] > 300 ||\n        (state.velocity > 3 && state.direction[1] > 0)\n      ) {\n        onDismiss();\n      }\n    },\n  });\n\n  return (\n    <>\n      {/* @reach/dialog/styles.css */}\n      <Global\n        styles={css`\n          :root {\n            --reach-dialog: 1;\n          }\n          [data-reach-dialog-overlay] {\n            background: hsla(0, 0%, 0%, 0.33);\n            position: fixed;\n            top: 0;\n            right: 0;\n            bottom: 0;\n            left: 0;\n            overflow: auto;\n            z-index: 100;\n          }\n          [data-reach-dialog-content] {\n            width: 50vw;\n            margin: 10vh auto;\n            background: white;\n            padding: 2rem;\n            outline: none;\n          }\n        `}\n      />\n      {fadeTransition(\n        (props, item) =>\n          item && (\n            <StyledDialogOverlay\n              style={props}\n              // eslint-disable-next-line react/prop-types\n              isOpen={isOpen || props.opacity.get() !== 0}\n              onDismiss={onDismiss}\n              darkenOverlay={darkenOverlay}\n            >\n              <ModalWrapper\n                aria-label=\"dialog content\"\n                {...(isMobile\n                  ? {\n                      ...bind(),\n                      style: {\n                        transform: y.to(\n                          (n) => `translateY(${n > 0 ? n : 0}px)`\n                        ),\n                      },\n                    }\n                  : {})}\n              >\n                <TopArea>\n                  {onBack ? (\n                    <ButtonIcon\n                      href=\"#\"\n                      onClick={(e) => {\n                        e.stopPropagation();\n                        e.preventDefault();\n                        onBack();\n                      }}\n                    >\n                      <BackIcon />\n                    </ButtonIcon>\n                  ) : (\n                    <div />\n                  )}\n                  {hideCloseButton ? (\n                    <div />\n                  ) : (\n                    <ButtonIcon\n                      href=\"#\"\n                      onClick={(e) => {\n                        e.stopPropagation();\n                        e.preventDefault();\n                        onDismiss();\n                      }}\n                    >\n                      <CloseIcon />\n                    </ButtonIcon>\n                  )}\n                </TopArea>\n                <Content>{children}</Content>\n              </ModalWrapper>\n            </StyledDialogOverlay>\n          )\n      )}\n    </>\n  );\n};\n\nconst LogoWrapper = styled.div`\n  flex: 1 1 auto;\n  padding-left: 24px;\n  padding-top: 10px;\n  display: flex;\n  justify-content: center;\n  svg {\n    width: 35%;\n  }\n`;\n\nconst TopArea = styled.div`\n  padding: 12px 16px 0px 16px;\n  top: 12px;\n  left: 16px;\n  right: 16px;\n  display: flex;\n  align-items: center;\n  justify-content: space-between;\n`;\n\nconst ButtonIcon = styled.a`\n  flex: 0 0 24px;\n  color: #ccd2e3;\n  &:hover {\n    color: ${darken(0.1, \"#ccd2e3\")};\n  }\n  transition: 0.1s ease;\n`;\n\nconst Content = styled.div``;\n\nconst ModalWrapper = styled(animated(DialogContent))`\n  * {\n    box-sizing: border-box;\n  }\n  font-family: SFHello, -apple-system, BlinkMacSystemFont, \"Segoe UI\", Roboto,\n    Helvetica, Arial, sans-serif, \"Apple Color Emoji\", \"Segoe UI Emoji\",\n    \"Segoe UI Symbol\";\n  position: relative;\n  box-shadow: 0px 4px 16px rgba(207, 207, 207, 0.25);\n  width: 100%;\n  max-width: 560px;\n  border-radius: 8px;\n  background: #fff;\n  color: #696969;\n  font-weight: normal;\n  font-size: 12px;\n  line-height: 15px;\n  letter-spacing: -0.02em;\n  color: #696969;\n`;\n\nconst StyledDialogOverlay = styled(animated(DialogOverlay), {\n  shouldForwardProp(prop) {\n    return prop !== \"darkenOverlay\";\n  },\n})<{\n  darkenOverlay: boolean;\n}>`\n  [data-reach-dialog-content] {\n    padding: 0;\n  }\n  ${({ darkenOverlay }) =>\n    darkenOverlay\n      ? css`\n          background: rgba(0, 0, 0, 0.55);\n        `\n      : css`\n          background: none;\n        `}\n`;\n"]}