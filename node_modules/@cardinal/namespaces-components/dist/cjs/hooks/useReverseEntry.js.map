{"version":3,"file":"useReverseEntry.js","sourceRoot":"","sources":["../../../src/hooks/useReverseEntry.ts"],"names":[],"mappings":";;;;AAEA,qDAAuD;AAEvD,iCAA0C;AAEnC,MAAM,eAAe,GAAG,CAC7B,UAA6B,EAC7B,MAA6B,EAC7B,EAAE;IACF,MAAM,CAAC,OAAO,EAAE,UAAU,CAAC,GAAG,IAAA,gBAAQ,EAAsB,SAAS,CAAC,CAAC;IACvE,MAAM,CAAC,gBAAgB,EAAE,eAAe,CAAC,GAAG,IAAA,gBAAQ,EAElD,SAAS,CAAC,CAAC;IAEb,MAAM,mBAAmB,GAAG,GAAS,EAAE;QACrC,UAAU,CAAC,IAAI,CAAC,CAAC;QACjB,IAAI;YACF,IAAI,CAAC,MAAM,IAAI,CAAC,UAAU;gBAAE,OAAO;YACnC,MAAM,IAAI,GAAG,MAAM,IAAA,4BAAe,EAAC,UAAU,EAAE,MAAM,CAAC,CAAC;YACvD,eAAe,CAAC,IAAI,CAAC,CAAC;SACvB;QAAC,OAAO,CAAC,EAAE;YACV,eAAe,CAAC,SAAS,CAAC,CAAC;YAC3B,OAAO,CAAC,GAAG,CAAC,gCAAgC,CAAC,EAAE,EAAE,CAAC,CAAC,CAAC;SACrD;gBAAS;YACR,UAAU,CAAC,KAAK,CAAC,CAAC;SACnB;IACH,CAAC,CAAA,CAAC;IAEF,IAAA,eAAO,EAAC,GAAS,EAAE;QACjB,mBAAmB,EAAE,CAAC;IACxB,CAAC,CAAA,EAAE,CAAC,UAAU,EAAE,MAAM,CAAC,CAAC,CAAC;IAEzB,OAAO;QACL,gBAAgB;QAChB,mBAAmB;QACnB,OAAO;KACR,CAAC;AACJ,CAAC,CAAC;AAhCW,QAAA,eAAe,mBAgC1B","sourcesContent":["import type { AccountData } from \"@cardinal/certificates\";\nimport type { ReverseEntryData } from \"@cardinal/namespaces\";\nimport { getReverseEntry } from \"@cardinal/namespaces\";\nimport type { Connection, PublicKey } from \"@solana/web3.js\";\nimport { useMemo, useState } from \"react\";\n\nexport const useReverseEntry = (\n  connection: Connection | null,\n  pubkey: PublicKey | undefined\n) => {\n  const [loading, setLoading] = useState<boolean | undefined>(undefined);\n  const [reverseEntryData, setReverseEntry] = useState<\n    AccountData<ReverseEntryData> | undefined\n  >(undefined);\n\n  const getReverseEntryData = async () => {\n    setLoading(true);\n    try {\n      if (!pubkey || !connection) return;\n      const data = await getReverseEntry(connection, pubkey);\n      setReverseEntry(data);\n    } catch (e) {\n      setReverseEntry(undefined);\n      console.log(`Failed to get claim request: ${e}`, e);\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  useMemo(async () => {\n    getReverseEntryData();\n  }, [connection, pubkey]);\n\n  return {\n    reverseEntryData,\n    getReverseEntryData,\n    loading,\n  };\n};\n"]}