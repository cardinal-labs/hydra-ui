{"version":3,"file":"useAddressName.js","sourceRoot":"","sources":["../../../src/hooks/useAddressName.ts"],"names":[],"mappings":";;;;AAAA,qDAAiD;AAEjD,iCAAyC;AAEzC,gFAAuE;AAEhE,MAAM,cAAc,GAAG,CAC5B,UAAsB,EACtB,OAA8B,EAC6B,EAAE;IAC7D,MAAM,EAAE,MAAM,EAAE,GAAG,IAAA,0CAAiB,GAAE,CAAA;IACtC,MAAM,CAAC,WAAW,EAAE,cAAc,CAAC,GAAG,IAAA,gBAAQ,GAAsB,CAAA;IACpE,MAAM,CAAC,WAAW,EAAE,cAAc,CAAC,GAAG,IAAA,gBAAQ,EAAU,IAAI,CAAC,CAAA;IAE7D,MAAM,WAAW,GAAG,GAAS,EAAE;QAC7B,IAAI;YACF,cAAc,CAAC,IAAI,CAAC,CAAA;YACpB,IAAI,OAAO,EAAE;gBACX,MAAM,CAAC,GAAG,MAAM,IAAA,uBAAU,EAAC,UAAU,EAAE,OAAO,CAAC,CAAA;gBAC/C,cAAc,CAAC,CAAC,CAAC,CAAA;aAClB;SACF;gBAAS;YACR,cAAc,CAAC,KAAK,CAAC,CAAA;SACtB;IACH,CAAC,CAAA,CAAA;IAED,IAAA,eAAO,EAAC,GAAG,EAAE;QACX,KAAK,WAAW,EAAE,CAAA;IACpB,CAAC,EAAE,CAAC,UAAU,EAAE,OAAO,aAAP,OAAO,uBAAP,OAAO,CAAE,QAAQ,EAAE,EAAE,MAAM,CAAC,CAAC,CAAA;IAE7C,OAAO,EAAE,WAAW,EAAE,WAAW,EAAE,CAAA;AACrC,CAAC,CAAA;AAzBY,QAAA,cAAc,kBAyB1B","sourcesContent":["import { tryGetName } from '@cardinal/namespaces'\nimport type { Connection, PublicKey } from '@solana/web3.js'\nimport { useMemo, useState } from 'react'\n\nimport { useWalletIdentity } from '../providers/WalletIdentityProvider'\n\nexport const useAddressName = (\n  connection: Connection,\n  address: PublicKey | undefined\n): { displayName: string | undefined; loadingName: boolean } => {\n  const { handle } = useWalletIdentity()\n  const [displayName, setDisplayName] = useState<string | undefined>()\n  const [loadingName, setLoadingName] = useState<boolean>(true)\n\n  const refreshName = async () => {\n    try {\n      setLoadingName(true)\n      if (address) {\n        const n = await tryGetName(connection, address)\n        setDisplayName(n)\n      }\n    } finally {\n      setLoadingName(false)\n    }\n  }\n\n  useMemo(() => {\n    void refreshName()\n  }, [connection, address?.toString(), handle])\n\n  return { displayName, loadingName }\n}\n"]}