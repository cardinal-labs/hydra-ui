{"version":3,"file":"constants.js","sourceRoot":"","sources":["../../../../src/programs/receiptManager/constants.ts"],"names":[],"mappings":";;;;AACA,6CAA+C;AAC/C,8CAA4D;AAG5D,6CAAqD;AAErD,kGAA4E;AAE/D,QAAA,uBAAuB,GAAG,IAAI,mBAAS,CAClD,6CAA6C,CAC9C,CAAC;AAEW,QAAA,oBAAoB,GAAG,iBAAiB,CAAC;AACzC,QAAA,mBAAmB,GAAG,gBAAgB,CAAC;AACvC,QAAA,kBAAkB,GAAG,eAAe,CAAC;AAKrC,QAAA,mBAAmB,GAAG,qBAAqB,CAAC,GAAG,CAAC;AAehD,QAAA,oCAAoC,GAAG,0BAA0B,CAAC;AAClE,QAAA,+BAA+B,GAAG,IAAI,mBAAS,CAC1D,8CAA8C,CAAC,2BAA2B;CAC3E,CAAC;AAEK,MAAM,qBAAqB,GAAG,CACnC,UAAsB,EACtB,MAAe,EACf,cAA+B,EAC/B,EAAE;IACF,OAAO,IAAI,gBAAO,CAChB,2BAAmB,EACnB,+BAAuB,EACvB,IAAI,uBAAc,CAChB,UAAU,EACV,MAAM,aAAN,MAAM,cAAN,MAAM,GAAI,IAAA,oBAAW,EAAC,iBAAO,CAAC,QAAQ,EAAE,CAAC,SAAS,CAAC,EACnD,cAAc,aAAd,cAAc,cAAd,cAAc,GAAI,EAAE,CACrB,CACF,CAAC;AACJ,CAAC,CAAC;AAdW,QAAA,qBAAqB,yBAchC","sourcesContent":["import type { ParsedIdlAccountData } from \"@cardinal/common\";\nimport { emptyWallet } from \"@cardinal/common\";\nimport { AnchorProvider, Program } from \"@coral-xyz/anchor\";\nimport type { Wallet } from \"@coral-xyz/anchor/dist/cjs/provider\";\nimport type { ConfirmOptions, Connection } from \"@solana/web3.js\";\nimport { Keypair, PublicKey } from \"@solana/web3.js\";\n\nimport * as RECEIPT_MANAGER_TYPES from \"../../idl/cardinal_receipt_manager\";\n\nexport const RECEIPT_MANAGER_ADDRESS = new PublicKey(\n  \"rrmevmpXMooxn8Qu6u7RWao93BZn4cKgfjtNMURSc2E\"\n);\n\nexport const RECEIPT_MANAGER_SEED = \"receipt-manager\";\nexport const REWARD_RECEIPT_SEED = \"reward-receipt\";\nexport const RECEIPT_ENTRY_SEED = \"receipt-entry\";\n\nexport type RECEIPT_MANAGER_PROGRAM =\n  RECEIPT_MANAGER_TYPES.CardinalReceiptManager;\n\nexport const RECEIPT_MANAGER_IDL = RECEIPT_MANAGER_TYPES.IDL;\n\nexport type ReceiptManagerData = ParsedIdlAccountData<\n  \"receiptManager\",\n  RECEIPT_MANAGER_PROGRAM\n>;\nexport type RewardReceiptData = ParsedIdlAccountData<\n  \"rewardReceipt\",\n  RECEIPT_MANAGER_PROGRAM\n>;\nexport type ReceiptEntryData = ParsedIdlAccountData<\n  \"receiptEntry\",\n  RECEIPT_MANAGER_PROGRAM\n>;\n\nexport const RECEIPT_MANAGER_PAYMENT_MANAGER_NAME = \"cardinal-receipt-manager\";\nexport const RECEIPT_MANAGER_PAYMENT_MANAGER = new PublicKey(\n  \"FQJ2czigCYygS8v8trLU7TBAi7NjRN1h1C2vLAh2GYDi\" // cardinal-receipt-manager\n);\n\nexport const receiptManagerProgram = (\n  connection: Connection,\n  wallet?: Wallet,\n  confirmOptions?: ConfirmOptions\n) => {\n  return new Program<RECEIPT_MANAGER_PROGRAM>(\n    RECEIPT_MANAGER_IDL,\n    RECEIPT_MANAGER_ADDRESS,\n    new AnchorProvider(\n      connection,\n      wallet ?? emptyWallet(Keypair.generate().publicKey),\n      confirmOptions ?? {}\n    )\n  );\n};\n"]}