{"version":3,"file":"constants.js","sourceRoot":"","sources":["../../../../src/programs/groupRewardDistributor/constants.ts"],"names":[],"mappings":";;;;AACA,6CAA+C;AAC/C,8CAA4D;AAG5D,6CAAqD;AAErD,oHAA8F;AAEjF,QAAA,gCAAgC,GAAG,IAAI,mBAAS,CAC3D,6CAA6C,CAC9C,CAAC;AACW,QAAA,oBAAoB,GAAG,IAAI,mBAAS,CAC/C,6CAA6C,CAC9C,CAAC;AAEW,QAAA,uBAAuB,GAAG,oBAAoB,CAAC;AAE/C,QAAA,yBAAyB,GAAG,sBAAsB,CAAC;AAEnD,QAAA,6BAA6B,GAAG,0BAA0B,CAAC;AAK3D,QAAA,4BAA4B,GAAG,8BAA8B,CAAC,GAAG,CAAC;AAe/E,IAAY,0BAGX;AAHD,WAAY,0BAA0B;IACpC,2EAAQ,CAAA;IACR,mFAAY,CAAA;AACd,CAAC,EAHW,0BAA0B,GAA1B,kCAA0B,KAA1B,kCAA0B,QAGrC;AACM,MAAM,4BAA4B,GAAG,CAAC,KAA6B,EAAE,EAAE,CAC5E,MAAM,CAAC,MAAM,CAAC,0BAA0B,CAAC,CAAC,SAAS,CACjD,CAAC,CAAC,EAAE,EAAE,WAAC,OAAC,CAAY,CAAC,WAAW,EAAE,MAAK,MAAA,MAAM,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,0CAAE,WAAW,EAAE,CAAA,CAAA,EAAA,CAC5E,GAAG,CAAC,CAAC;AAHK,QAAA,4BAA4B,gCAGjC;AAER,IAAY,kCAIX;AAJD,WAAY,kCAAkC;IAC5C,6GAAiB,CAAA;IACjB,yGAAe,CAAA;IACf,6GAAiB,CAAA;AACnB,CAAC,EAJW,kCAAkC,GAAlC,0CAAkC,KAAlC,0CAAkC,QAI7C;AACM,MAAM,oCAAoC,GAAG,CAAC,KAEpD,EAAE,EAAE,CACH,MAAM,CAAC,MAAM,CAAC,kCAAkC,CAAC,CAAC,SAAS,CACzD,CAAC,CAAC,EAAE,EAAE,WAAC,OAAC,CAAY,CAAC,WAAW,EAAE,MAAK,MAAA,MAAM,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,0CAAE,WAAW,EAAE,CAAA,CAAA,EAAA,CAC5E,GAAG,CAAC,CAAC;AALK,QAAA,oCAAoC,wCAKzC;AAER,IAAY,8BAIX;AAJD,WAAY,8BAA8B;IACxC,qGAAiB,CAAA;IACjB,6GAAqB,CAAA;IACrB,mHAAwB,CAAA;AAC1B,CAAC,EAJW,8BAA8B,GAA9B,sCAA8B,KAA9B,sCAA8B,QAIzC;AACM,MAAM,gCAAgC,GAAG,CAAC,KAEhD,EAAE,EAAE,CACH,MAAM,CAAC,MAAM,CAAC,8BAA8B,CAAC,CAAC,SAAS,CACrD,CAAC,CAAC,EAAE,EAAE,WAAC,OAAC,CAAY,CAAC,WAAW,EAAE,MAAK,MAAA,MAAM,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,0CAAE,WAAW,EAAE,CAAA,CAAA,EAAA,CAC5E,GAAG,CAAC,CAAC;AALK,QAAA,gCAAgC,oCAKrC;AAED,MAAM,6BAA6B,GAAG,CAC3C,UAAsB,EACtB,MAAe,EACf,cAA+B,EAC/B,EAAE;IACF,OAAO,IAAI,gBAAO,CAChB,oCAA4B,EAC5B,wCAAgC,EAChC,IAAI,uBAAc,CAChB,UAAU,EACV,MAAM,aAAN,MAAM,cAAN,MAAM,GAAI,IAAA,oBAAW,EAAC,iBAAO,CAAC,QAAQ,EAAE,CAAC,SAAS,CAAC,EACnD,cAAc,aAAd,cAAc,cAAd,cAAc,GAAI,EAAE,CACrB,CACF,CAAC;AACJ,CAAC,CAAC;AAdW,QAAA,6BAA6B,iCAcxC","sourcesContent":["import type { ParsedIdlAccountData } from \"@cardinal/common\";\nimport { emptyWallet } from \"@cardinal/common\";\nimport { AnchorProvider, Program } from \"@coral-xyz/anchor\";\nimport type { Wallet } from \"@coral-xyz/anchor/dist/cjs/provider\";\nimport type { ConfirmOptions, Connection } from \"@solana/web3.js\";\nimport { Keypair, PublicKey } from \"@solana/web3.js\";\n\nimport * as GROUP_REWARD_DISTRIBUTOR_TYPES from \"../../idl/cardinal_group_reward_distributor\";\n\nexport const GROUP_REWARD_DISTRIBUTOR_ADDRESS = new PublicKey(\n  \"grwDL1AZiCaBmTQHTQVhX6wxXKowAnisDZxH7866LUL\"\n);\nexport const GROUP_REWARD_MANAGER = new PublicKey(\n  \"crkdpVWjHWdggGgBuSyAqSmZUmAjYLzD435tcLDRLXr\"\n);\n\nexport const GROUP_REWARD_ENTRY_SEED = \"group-reward-entry\";\n\nexport const GROUP_REWARD_COUNTER_SEED = \"group-reward-counter\";\n\nexport const GROUP_REWARD_DISTRIBUTOR_SEED = \"group-reward-distributor\";\n\nexport type GROUP_REWARD_DISTRIBUTOR_PROGRAM =\n  GROUP_REWARD_DISTRIBUTOR_TYPES.CardinalGroupRewardDistributor;\n\nexport const GROUP_REWARD_DISTRIBUTOR_IDL = GROUP_REWARD_DISTRIBUTOR_TYPES.IDL;\n\nexport type GroupRewardEntryData = ParsedIdlAccountData<\n  \"groupRewardEntry\",\n  GROUP_REWARD_DISTRIBUTOR_PROGRAM\n>;\nexport type GroupRewardCounterData = ParsedIdlAccountData<\n  \"groupRewardCounter\",\n  GROUP_REWARD_DISTRIBUTOR_PROGRAM\n>;\nexport type GroupRewardDistributorData = ParsedIdlAccountData<\n  \"groupRewardDistributor\",\n  GROUP_REWARD_DISTRIBUTOR_PROGRAM\n>;\n\nexport enum GroupRewardDistributorKind {\n  Mint = 1,\n  Treasury = 2,\n}\nexport const toGroupRewardDistributorKind = (value: { [key: string]: any }) =>\n  Object.values(GroupRewardDistributorKind).findIndex(\n    (x) => (x as string).toLowerCase() === Object.keys(value)[0]?.toLowerCase()\n  ) + 1;\n\nexport enum GroupRewardDistributorMetadataKind {\n  NoRestriction = 1,\n  UniqueNames = 2,\n  UniqueSymbols = 3,\n}\nexport const toGroupRewardDistributorMetadataKind = (value: {\n  [key: string]: any;\n}) =>\n  Object.values(GroupRewardDistributorMetadataKind).findIndex(\n    (x) => (x as string).toLowerCase() === Object.keys(value)[0]?.toLowerCase()\n  ) + 1;\n\nexport enum GroupRewardDistributorPoolKind {\n  NoRestriction = 1,\n  AllFromSinglePool = 2,\n  EachFromSeparatePool = 3,\n}\nexport const toGroupRewardDistributorPoolKind = (value: {\n  [key: string]: any;\n}) =>\n  Object.values(GroupRewardDistributorPoolKind).findIndex(\n    (x) => (x as string).toLowerCase() === Object.keys(value)[0]?.toLowerCase()\n  ) + 1;\n\nexport const groupRewardDistributorProgram = (\n  connection: Connection,\n  wallet?: Wallet,\n  confirmOptions?: ConfirmOptions\n) => {\n  return new Program<GROUP_REWARD_DISTRIBUTOR_PROGRAM>(\n    GROUP_REWARD_DISTRIBUTOR_IDL,\n    GROUP_REWARD_DISTRIBUTOR_ADDRESS,\n    new AnchorProvider(\n      connection,\n      wallet ?? emptyWallet(Keypair.generate().publicKey),\n      confirmOptions ?? {}\n    )\n  );\n};\n"]}