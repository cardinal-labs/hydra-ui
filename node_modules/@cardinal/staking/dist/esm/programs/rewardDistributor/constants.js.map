{"version":3,"file":"constants.js","sourceRoot":"","sources":["../../../../src/programs/rewardDistributor/constants.ts"],"names":[],"mappings":"AACA,OAAO,EAAE,WAAW,EAAE,MAAM,kBAAkB,CAAC;AAC/C,OAAO,EAAE,cAAc,EAAE,OAAO,EAAE,MAAM,mBAAmB,CAAC;AAG5D,OAAO,EAAE,OAAO,EAAE,SAAS,EAAE,MAAM,iBAAiB,CAAC;AAErD,OAAO,KAAK,wBAAwB,MAAM,uCAAuC,CAAC;AAElF,MAAM,CAAC,MAAM,0BAA0B,GAAG,IAAI,SAAS,CACrD,6CAA6C,CAC9C,CAAC;AACF,MAAM,CAAC,MAAM,cAAc,GAAG,IAAI,SAAS,CACzC,6CAA6C,CAC9C,CAAC;AAEF,MAAM,CAAC,MAAM,iBAAiB,GAAG,cAAc,CAAC;AAEhD,MAAM,CAAC,MAAM,uBAAuB,GAAG,oBAAoB,CAAC;AAK5D,MAAM,CAAC,MAAM,sBAAsB,GAAG,wBAAwB,CAAC,GAAG,CAAC;AAWnE,MAAM,CAAN,IAAY,qBAGX;AAHD,WAAY,qBAAqB;IAC/B,iEAAQ,CAAA;IACR,yEAAY,CAAA;AACd,CAAC,EAHW,qBAAqB,KAArB,qBAAqB,QAGhC;AAED,MAAM,CAAC,MAAM,wBAAwB,GAAG,CACtC,UAAsB,EACtB,MAAe,EACf,cAA+B,EAC/B,EAAE;IACF,OAAO,IAAI,OAAO,CAChB,sBAAsB,EACtB,0BAA0B,EAC1B,IAAI,cAAc,CAChB,UAAU,EACV,MAAM,aAAN,MAAM,cAAN,MAAM,GAAI,WAAW,CAAC,OAAO,CAAC,QAAQ,EAAE,CAAC,SAAS,CAAC,EACnD,cAAc,aAAd,cAAc,cAAd,cAAc,GAAI,EAAE,CACrB,CACF,CAAC;AACJ,CAAC,CAAC","sourcesContent":["import type { ParsedIdlAccountData } from \"@cardinal/common\";\nimport { emptyWallet } from \"@cardinal/common\";\nimport { AnchorProvider, Program } from \"@coral-xyz/anchor\";\nimport type { Wallet } from \"@coral-xyz/anchor/dist/cjs/provider\";\nimport type { ConfirmOptions, Connection } from \"@solana/web3.js\";\nimport { Keypair, PublicKey } from \"@solana/web3.js\";\n\nimport * as REWARD_DISTRIBUTOR_TYPES from \"../../idl/cardinal_reward_distributor\";\n\nexport const REWARD_DISTRIBUTOR_ADDRESS = new PublicKey(\n  \"rwdNPNPS6zNvtF6FMvaxPRjzu2eC51mXaDT9rmWsojp\"\n);\nexport const REWARD_MANAGER = new PublicKey(\n  \"crkdpVWjHWdggGgBuSyAqSmZUmAjYLzD435tcLDRLXr\"\n);\n\nexport const REWARD_ENTRY_SEED = \"reward-entry\";\n\nexport const REWARD_DISTRIBUTOR_SEED = \"reward-distributor\";\n\nexport type REWARD_DISTRIBUTOR_PROGRAM =\n  REWARD_DISTRIBUTOR_TYPES.CardinalRewardDistributor;\n\nexport const REWARD_DISTRIBUTOR_IDL = REWARD_DISTRIBUTOR_TYPES.IDL;\n\nexport type RewardEntryData = ParsedIdlAccountData<\n  \"rewardEntry\",\n  REWARD_DISTRIBUTOR_PROGRAM\n>;\nexport type RewardDistributorData = ParsedIdlAccountData<\n  \"rewardDistributor\",\n  REWARD_DISTRIBUTOR_PROGRAM\n>;\n\nexport enum RewardDistributorKind {\n  Mint = 1,\n  Treasury = 2,\n}\n\nexport const rewardDistributorProgram = (\n  connection: Connection,\n  wallet?: Wallet,\n  confirmOptions?: ConfirmOptions\n) => {\n  return new Program<REWARD_DISTRIBUTOR_PROGRAM>(\n    REWARD_DISTRIBUTOR_IDL,\n    REWARD_DISTRIBUTOR_ADDRESS,\n    new AnchorProvider(\n      connection,\n      wallet ?? emptyWallet(Keypair.generate().publicKey),\n      confirmOptions ?? {}\n    )\n  );\n};\n"]}